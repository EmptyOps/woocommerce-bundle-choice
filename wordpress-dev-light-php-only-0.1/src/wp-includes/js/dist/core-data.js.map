{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://wp/@wordpress/core-data/src/actions.js","webpack://wp/@wordpress/core-data/src/controls.js","webpack://wp/@wordpress/core-data/src/entities.js","webpack://wp/@wordpress/core-data/src/entity-provider.js","webpack://wp/@wordpress/core-data/src/index.js","webpack://wp/@wordpress/core-data/src/name.js","webpack://wp/@wordpress/core-data/src/queried-data/actions.js","webpack://wp/@wordpress/core-data/src/queried-data/get-query-parts.js","webpack://wp/@wordpress/core-data/src/queried-data/index.js","webpack://wp/@wordpress/core-data/src/queried-data/reducer.js","webpack://wp/@wordpress/core-data/src/queried-data/selectors.js","webpack://wp/@wordpress/core-data/src/reducer.js","webpack://wp/@wordpress/core-data/src/resolvers.js","webpack://wp/@wordpress/core-data/src/selectors.js","webpack://wp/@wordpress/core-data/src/utils/conservative-map-item.js","webpack://wp/@wordpress/core-data/src/utils/if-matching-action.js","webpack://wp/@wordpress/core-data/src/utils/index.js","webpack://wp/@wordpress/core-data/src/utils/on-sub-key.js","webpack://wp/@wordpress/core-data/src/utils/replace-action.js","webpack://wp/@wordpress/core-data/src/utils/with-weak-map-cache.js","webpack://wp/./node_modules/equivalent-key-map/equivalent-key-map.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/external {\"this\":\"regeneratorRuntime\"}","webpack://wp/external {\"this\":[\"wp\",\"apiFetch\"]}","webpack://wp/external {\"this\":[\"wp\",\"blocks\"]}","webpack://wp/external {\"this\":[\"wp\",\"data\"]}","webpack://wp/external {\"this\":[\"wp\",\"deprecated\"]}","webpack://wp/external {\"this\":[\"wp\",\"element\"]}","webpack://wp/external {\"this\":[\"wp\",\"isShallowEqual\"]}","webpack://wp/external {\"this\":[\"wp\",\"url\"]}","webpack://wp/external {\"this\":\"lodash\"}"],"names":["editEntityRecord","undo","redo","saveEntityRecord","saveEditedEntityRecord","receiveUserQuery","queryID","users","type","castArray","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","map","record","status","title","action","receiveQueriedItems","receiveItems","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","edits","options","select","entity","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","isEqual","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","__unstableCreateUndoLevel","isAutosave","getKindEntities","find","entityIdKey","DEFAULT_ENTITY_KEY","entries","evaluatedValue","path","baseURL","persistedRecord","currentUserId","id","autosavePost","data","includes","get","apiFetch","method","updatedRecord","newRecord","receiveAutosaves","persistedEntity","currentEdits","error","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves","request","selectorName","args","resolveSelect","controls","API_FETCH","triggerApiFetch","SELECT","createRegistryControl","registry","RESOLVE_SELECT","__experimentalResolveSelect","loadPostTypeEntities","loadTaxonomyEntities","defaultEntities","plural","blocks","kinds","loadEntities","postTypes","postType","rest_base","selectionStart","selectionEnd","taxonomies","taxonomy","getMethodName","prefix","usePlural","kindPrefix","upperFirst","camelCase","nameSuffix","suffix","length","kindConfig","context","createContext","getEntity","EntityProvider","children","Provider","useEntityId","useContext","useEntityProp","prop","useSelect","getEntityRecord","getEditedEntityRecord","useDispatch","setValue","useCallback","newValue","useEntityBlockEditor","initialEdits","blocksProp","contentProp","content","setContent","initialBlocks","useMemo","parsedContent","parse","onInput","onChange","nextBlocks","blocksToSerialize","serialize","entitySelectors","result","state","selectors","entityResolvers","resolvers","pluralMethodName","shouldInvalidate","entityActions","actions","registerStore","REDUCER_KEY","reducer","items","getQueryParts","parts","stableKey","page","perPage","sort","i","Number","addQueryArgs","slice","withWeakMapCache","getMergedItemIds","itemIds","nextItemIds","nextItemIdsStartIndex","size","Math","max","mergedItemIds","Array","isInNextItemsRange","accumulator","itemId","conservativeMapItem","queries","flowRight","ifMatchingAction","replaceAction","onSubKey","combineReducers","queriedItemsCacheByState","WeakMap","getQueriedItemsUncached","startOffset","endOffset","min","push","getQueriedItems","createSelector","queriedItemsCache","queriedItems","EquivalentKeyMap","set","terms","byId","keyBy","user","entityConfig","queriedData","queriedDataReducer","nextState","nextEdits","forEach","saving","pending","entitiesConfig","newConfig","config","entitiesDataReducer","entitiesByKind","groupBy","memo","subEntities","kindReducer","kindMemo","newData","UNDO_INITIAL_STATE","offset","lastEditAction","isCreateUndoLevel","isUndoOrRedo","some","flattenedUndo","pop","comparisonUndoEdits","values","filter","comparisonEdits","isShallowEqual","embedPreviews","userPermissions","autosavesData","getAuthors","getCurrentUser","getEntityRecords","getThemeSupports","getEmbedPreview","canUser","getAutosaves","getAutosave","activeThemes","theme_supports","embedProxyResponse","deprecated","alternative","resource","methods","create","read","update","delete","response","hasIn","allowHeader","headers","compact","join","restBase","isRequestingEmbedPreview","createRegistrySelector","isResolving","getUserQueryResults","queryResults","getEntitiesByKind","__experimentalGetEntityRecordNoResolver","getRawEntityRecord","_key","queriedState","getEntityRecordChangesByRecord","editsKeys","editsKey","hasEditsForEntityRecord","rawRecord","getEntityRecordNonTransientEdits","getEntityRecordEdits","isSavingEntityRecord","isAutosavingEntityRecord","Boolean","getLastEntitySaveError","getCurrentUndoOffset","getUndoEdit","getRedoEdit","hasUndo","hasRedo","isPreviewEmbedFallback","oEmbedLinkCheck","html","defaultTo","authorId","author","hasFetchedAutosaves","hasFinishedResolution","getReferenceByDistinctEdits","item","nextItem","hasChanges","isMatch","actionProperty","nextKeyState","replacer","fn","cache","has","isObjectLike"],"mappings":"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CA;AACA;;AACA,UAAKsR,2DAAY,CAAEtR,GAAF,CAAjB,EAA2B;AAC1BoR,aAAK,CAAC7G,GAAN,CAAWvK,GAAX,EAAgBG,KAAhB;AACA;AACD;;AAED,WAAOA,KAAP;AACA,GAhBD;AAiBA;;AAEcoI,+EAAf;;;;;;;;;;;;;ACpCa;;AAEb;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA,GAAG;;;AAGH,2CAA2C;;AAE3C;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA,mCAAmC;;AAEnC;;AAEA,qBAAqB,uBAAuB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,GAAG;AACnB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,QAAQ;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,QAAQ;AACxB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;;;;;;;;;;;;AClTA;AAAa;;AAEb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACjRD,aAAa,6CAA6C,EAAE,I;;;;;;;;;;;ACA5D,aAAa,yCAAyC,EAAE,I;;;;;;;;;;;ACAxD,aAAa,uCAAuC,EAAE,I;;;;;;;;;;;ACAtD,aAAa,qCAAqC,EAAE,I;;;;;;;;;;;ACApD,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,+CAA+C,EAAE,I;;;;;;;;;;;ACA9D,aAAa,oCAAoC,EAAE,I;;;;;;;;;;;ACAnD,aAAa,iCAAiC,EAAE,I","file":"core-data.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/@wordpress/core-data/build-module/index.js\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport { select, apiFetch } from './controls';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches\n *\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query );\n\t} else {\n\t\taction = receiveItems( records );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url     URL to preview the embed for.\n * @param {*}       preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield select( 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield select( 'getRawEntityRecord', kind, name, recordId );\n\tconst editedRecord = yield select(\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield select( 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield select( 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string} kind    Kind of the received entity.\n * @param {string} name    Name of the received entity.\n * @param {Object} record  Record to be saved.\n * @param {Object} options Saving options.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false } = { isAutosave: false }\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\t// Evaluate optimized edits.\n\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\tif ( typeof value === 'function' ) {\n\t\t\tconst evaluatedValue = value(\n\t\t\t\tyield select( 'getEditedEntityRecord', kind, name, recordId )\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t\trecord[ key ] = evaluatedValue;\n\t\t}\n\t}\n\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tisAutosave,\n\t};\n\tlet updatedRecord;\n\tlet error;\n\tlet persistedEntity;\n\tlet currentEdits;\n\ttry {\n\t\tconst path = `${ entity.baseURL }${ recordId ? '/' + recordId : '' }`;\n\t\tconst persistedRecord = yield select(\n\t\t\t'getRawEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tif ( isAutosave ) {\n\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t// so the client just sends and receives objects.\n\t\t\tconst currentUser = yield select( 'getCurrentUser' );\n\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\tconst autosavePost = yield select(\n\t\t\t\t'getAutosave',\n\t\t\t\tpersistedRecord.type,\n\t\t\t\tpersistedRecord.id,\n\t\t\t\tcurrentUserId\n\t\t\t);\n\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t// So we fallback to the previous autosave and then\n\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t// have a value.\n\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{ status: data.status === 'auto-draft' ? 'draft' : data.status }\n\t\t\t);\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t// when its update is requested by the author and the post had\n\t\t\t// draft or auto-draft status.\n\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\tlet newRecord = {\n\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t...data,\n\t\t\t\t\t...updatedRecord,\n\t\t\t\t};\n\t\t\t\tnewRecord = Object.keys( newRecord ).reduce( ( acc, key ) => {\n\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} );\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tnewRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t}\n\t\t} else {\n\t\t\t// Auto drafts should be converted to drafts on explicit saves and we should not respect their default title,\n\t\t\t// but some plugins break with this behavior so we can't filter it on the server.\n\t\t\tlet data = record;\n\t\t\tif (\n\t\t\t\tkind === 'postType' &&\n\t\t\t\tpersistedRecord &&\n\t\t\t\tpersistedRecord.status === 'auto-draft'\n\t\t\t) {\n\t\t\t\tif ( ! data.status ) {\n\t\t\t\t\tdata = { ...data, status: 'draft' };\n\t\t\t\t}\n\t\t\t\tif ( ! data.title || data.title === 'Auto Draft' ) {\n\t\t\t\t\tdata = { ...data, title: '' };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get the full local version of the record before the update,\n\t\t\t// to merge it with the edits and then propagate it to subscribers\n\t\t\tpersistedEntity = yield select(\n\t\t\t\t'__experimentalGetEntityRecordNoResolver',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tcurrentEdits = yield select(\n\t\t\t\t'getEntityRecordEdits',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t{ ...persistedEntity, ...data },\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tupdatedRecord,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t} catch ( _error ) {\n\t\terror = _error;\n\n\t\t// If we got to the point in the try block where we made an optimistic update,\n\t\t// we need to roll it back here.\n\t\tif ( persistedEntity && currentEdits ) {\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tpersistedEntity,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t...currentEdits,\n\t\t\t\t\t...( yield select(\n\t\t\t\t\t\t'getEntityRecordEdits',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t) ),\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t\tisAutosave,\n\t};\n\n\treturn updatedRecord;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield select( 'hasEditsForEntityRecord', kind, name, recordId ) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield select(\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\tyield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { default as triggerApiFetch } from '@wordpress/api-fetch';\nimport { createRegistryControl } from '@wordpress/data';\n\n/**\n * Trigger an API Fetch request.\n *\n * @param {Object} request API Fetch Request Object.\n * @return {Object} control descriptor.\n */\nexport function apiFetch( request ) {\n\treturn {\n\t\ttype: 'API_FETCH',\n\t\trequest,\n\t};\n}\n\n/**\n * Calls a selector using the current state.\n *\n * @param {string} selectorName Selector name.\n * @param  {Array} args         Selector arguments.\n *\n * @return {Object} control descriptor.\n */\nexport function select( selectorName, ...args ) {\n\treturn {\n\t\ttype: 'SELECT',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches a control action for triggering a registry select that has a\n * resolver.\n *\n * @param {string}  selectorName\n * @param {Array}   args  Arguments for the select.\n *\n * @return {Object} control descriptor.\n */\nexport function resolveSelect( selectorName, ...args ) {\n\treturn {\n\t\ttype: 'RESOLVE_SELECT',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\nconst controls = {\n\tAPI_FETCH( { request } ) {\n\t\treturn triggerApiFetch( request );\n\t},\n\n\tSELECT: createRegistryControl(\n\t\t( registry ) => ( { selectorName, args } ) => {\n\t\t\treturn registry.select( 'core' )[ selectorName ]( ...args );\n\t\t}\n\t),\n\n\tRESOLVE_SELECT: createRegistryControl(\n\t\t( registry ) => ( { selectorName, args } ) => {\n\t\t\treturn registry\n\t\t\t\t.__experimentalResolveSelect( 'core' )\n\t\t\t\t[ selectorName ]( ...args );\n\t\t}\n\t),\n};\n\nexport default controls;\n","/**\n * External dependencies\n */\nimport { upperFirst, camelCase, map, find } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { addEntities } from './actions';\nimport { apiFetch, select } from './controls';\n\nexport const DEFAULT_ENTITY_KEY = 'id';\n\nexport const defaultEntities = [\n\t{ name: 'site', kind: 'root', baseURL: '/wp/v2/settings' },\n\t{ name: 'postType', kind: 'root', key: 'slug', baseURL: '/wp/v2/types' },\n\t{\n\t\tname: 'media',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/media',\n\t\tplural: 'mediaItems',\n\t},\n\t{\n\t\tname: 'taxonomy',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/taxonomies',\n\t\tplural: 'taxonomies',\n\t},\n\t{\n\t\tname: 'widgetArea',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/widget-areas',\n\t\tplural: 'widgetAreas',\n\t\ttransientEdits: { blocks: true },\n\t},\n\t{ name: 'user', kind: 'root', baseURL: '/wp/v2/users', plural: 'users' },\n];\n\nexport const kinds = [\n\t{ name: 'postType', loadEntities: loadPostTypeEntities },\n\t{ name: 'taxonomy', loadEntities: loadTaxonomyEntities },\n];\n\n/**\n * Returns the list of post type entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadPostTypeEntities() {\n\tconst postTypes = yield apiFetch( { path: '/wp/v2/types?context=edit' } );\n\treturn map( postTypes, ( postType, name ) => {\n\t\treturn {\n\t\t\tkind: 'postType',\n\t\t\tbaseURL: '/wp/v2/' + postType.rest_base,\n\t\t\tname,\n\t\t\ttransientEdits: {\n\t\t\t\tblocks: true,\n\t\t\t\tselectionStart: true,\n\t\t\t\tselectionEnd: true,\n\t\t\t},\n\t\t\tmergedEdits: { meta: true },\n\t\t};\n\t} );\n}\n\n/**\n * Returns the list of the taxonomies entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadTaxonomyEntities() {\n\tconst taxonomies = yield apiFetch( {\n\t\tpath: '/wp/v2/taxonomies?context=edit',\n\t} );\n\treturn map( taxonomies, ( taxonomy, name ) => {\n\t\treturn {\n\t\t\tkind: 'taxonomy',\n\t\t\tbaseURL: '/wp/v2/' + taxonomy.rest_base,\n\t\t\tname,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the entity's getter method name given its kind and name.\n *\n * @param {string}  kind      Entity kind.\n * @param {string}  name      Entity name.\n * @param {string}  prefix    Function prefix.\n * @param {boolean} usePlural Whether to use the plural form or not.\n *\n * @return {string} Method name\n */\nexport const getMethodName = (\n\tkind,\n\tname,\n\tprefix = 'get',\n\tusePlural = false\n) => {\n\tconst entity = find( defaultEntities, { kind, name } );\n\tconst kindPrefix = kind === 'root' ? '' : upperFirst( camelCase( kind ) );\n\tconst nameSuffix =\n\t\tupperFirst( camelCase( name ) ) + ( usePlural ? 's' : '' );\n\tconst suffix =\n\t\tusePlural && entity.plural\n\t\t\t? upperFirst( camelCase( entity.plural ) )\n\t\t\t: nameSuffix;\n\treturn `${ prefix }${ kindPrefix }${ suffix }`;\n};\n\n/**\n * Loads the kind entities into the store.\n *\n * @param {string} kind  Kind\n *\n * @return {Array} Entities\n */\nexport function* getKindEntities( kind ) {\n\tlet entities = yield select( 'getEntitiesByKind', kind );\n\tif ( entities && entities.length !== 0 ) {\n\t\treturn entities;\n\t}\n\n\tconst kindConfig = find( kinds, { name: kind } );\n\tif ( ! kindConfig ) {\n\t\treturn [];\n\t}\n\n\tentities = yield kindConfig.loadEntities();\n\tyield addEntities( entities );\n\n\treturn entities;\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseContext,\n\tuseCallback,\n\tuseMemo,\n} from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { parse, serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { defaultEntities, kinds } from './entities';\n\nconst entities = {\n\t...defaultEntities.reduce( ( acc, entity ) => {\n\t\tif ( ! acc[ entity.kind ] ) {\n\t\t\tacc[ entity.kind ] = {};\n\t\t}\n\t\tacc[ entity.kind ][ entity.name ] = { context: createContext() };\n\t\treturn acc;\n\t}, {} ),\n\t...kinds.reduce( ( acc, kind ) => {\n\t\tacc[ kind.name ] = {};\n\t\treturn acc;\n\t}, {} ),\n};\nconst getEntity = ( kind, type ) => {\n\tif ( ! entities[ kind ] ) {\n\t\tthrow new Error( `Missing entity config for kind: ${ kind }.` );\n\t}\n\n\tif ( ! entities[ kind ][ type ] ) {\n\t\tentities[ kind ][ type ] = { context: createContext() };\n\t}\n\n\treturn entities[ kind ][ type ];\n};\n\n/**\n * Context provider component for providing\n * an entity for a specific entity type.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity type.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type, id, children } ) {\n\tconst Provider = getEntity( kind, type ).context.Provider;\n\treturn <Provider value={ id }>{ children }</Provider>;\n}\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n */\nexport function useEntityId( kind, type ) {\n\treturn useContext( getEntity( kind, type ).context );\n}\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n * @param {string} prop The property name.\n *\n * @return {[*, Function]} A tuple where the first item is the\n *                          property value and the second is the\n *                          setter.\n */\nexport function useEntityProp( kind, type, prop ) {\n\tconst id = useEntityId( kind, type );\n\n\tconst value = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } = select( 'core' );\n\t\t\tgetEntityRecord( kind, type, id ); // Trigger resolver.\n\t\t\tconst entity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn entity && entity[ prop ];\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, type, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\treturn [ value, setValue ];\n}\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * peristent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind                            The entity kind.\n * @param {string} type                            The entity type.\n * @param {Object} options\n * @param {Object} [options.initialEdits]          Initial edits object for the entity record.\n * @param {string} [options.blocksProp='blocks']   The name of the entity prop that holds the blocks array.\n * @param {string} [options.contentProp='content'] The name of the entity prop that holds the serialized blocks.\n *\n * @return {[WPBlock[], Function, Function]} The block array and setters.\n */\nexport function useEntityBlockEditor(\n\tkind,\n\ttype,\n\t{ initialEdits, blocksProp = 'blocks', contentProp = 'content' } = {}\n) {\n\tconst [ content, setContent ] = useEntityProp( kind, type, contentProp );\n\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tconst id = useEntityId( kind, type );\n\tconst initialBlocks = useMemo( () => {\n\t\tif ( initialEdits ) {\n\t\t\teditEntityRecord( kind, type, id, initialEdits, {\n\t\t\t\tundoIgnore: true,\n\t\t\t} );\n\t\t}\n\n\t\t// Guard against other instances that might have\n\t\t// set content to a function already.\n\t\tif ( typeof content !== 'function' ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\treturn parsedContent.length ? parsedContent : [];\n\t\t}\n\t}, [ id ] ); // Reset when the provided entity record changes.\n\tconst [ blocks = initialBlocks, onInput ] = useEntityProp(\n\t\tkind,\n\t\ttype,\n\t\tblocksProp\n\t);\n\n\tconst onChange = useCallback(\n\t\t( nextBlocks ) => {\n\t\t\tonInput( nextBlocks );\n\t\t\t// Use a function edit to avoid serializing often.\n\t\t\tsetContent( ( { blocks: blocksToSerialize } ) =>\n\t\t\t\tserialize( blocksToSerialize )\n\t\t\t);\n\t\t},\n\t\t[ onInput, setContent ]\n\t);\n\treturn [ blocks, onInput, onChange ];\n}\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport controls from './controls';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport { defaultEntities, getMethodName } from './entities';\nimport { REDUCER_KEY } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecordss)\n// Instead of getEntityRecord, the consumer could use more user-frieldly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key ) =>\n\t\tselectors.getEntityRecord( state, kind, name, key );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, ...args ) =>\n\t\tselectors.getEntityRecords( state, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityResolvers = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key ) =>\n\t\tresolvers.getEntityRecord( kind, name, key );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) =>\n\t\tresolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action, ...args ) =>\n\t\tresolvers.getEntityRecords.shouldInvalidate(\n\t\t\taction,\n\t\t\tkind,\n\t\t\tname,\n\t\t\t...args\n\t\t);\n\treturn result;\n}, {} );\n\nconst entityActions = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) =>\n\t\tactions.saveEntityRecord( kind, name, key );\n\treturn result;\n}, {} );\n\nregisterStore( REDUCER_KEY, {\n\treducer,\n\tcontrols,\n\tactions: { ...actions, ...entityActions },\n\tselectors: { ...selectors, ...entitySelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n} );\n\nexport { default as EntityProvider } from './entity-provider';\nexport * from './entity-provider';\n","/**\n * The reducer key used by core data in store registration.\n * This is defined in a separate file to avoid cycle-dependency\n *\n * @type {string}\n */\nexport const REDUCER_KEY = 'core';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that items have been received.\n *\n * @param {Array} items Items received.\n *\n * @return {Object} Action object.\n */\nexport function receiveItems( items ) {\n\treturn {\n\t\ttype: 'RECEIVE_ITEMS',\n\t\titems: castArray( items ),\n\t};\n}\n\n/**\n * Returns an action object used in signalling that queried data has been\n * received.\n *\n * @param {Array}   items Queried items received.\n * @param {?Object} query Optional query object.\n *\n * @return {Object} Action object.\n */\nexport function receiveQueriedItems( items, query = {} ) {\n\treturn {\n\t\t...receiveItems( items ),\n\t\tquery,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { withWeakMapCache } from '../utils';\n\n/**\n * An object of properties describing a specific query.\n *\n * @typedef {Object} WPQueriedDataQueryParts\n *\n * @property {number} page      The query page (1-based index, default 1).\n * @property {number} perPage   Items per page for query (default 10).\n * @property {string} stableKey An encoded stable string of all non-pagination\n *                              query parameters.\n */\n\n/**\n * Given a query object, returns an object of parts, including pagination\n * details (`page` and `perPage`, or default values). All other properties are\n * encoded into a stable (idempotent) `stableKey` value.\n *\n * @param {Object} query Optional query object.\n *\n * @return {WPQueriedDataQueryParts} Query parts.\n */\nexport function getQueryParts( query ) {\n\t/**\n\t * @type {WPQueriedDataQueryParts}\n\t */\n\tconst parts = {\n\t\tstableKey: '',\n\t\tpage: 1,\n\t\tperPage: 10,\n\t};\n\n\t// Ensure stable key by sorting keys. Also more efficient for iterating.\n\tconst keys = Object.keys( query ).sort();\n\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tconst value = query[ key ];\n\n\t\tswitch ( key ) {\n\t\t\tcase 'page':\n\t\t\t\tparts[ key ] = Number( value );\n\t\t\t\tbreak;\n\t\t\tcase 'per_page':\n\t\t\t\tparts.perPage = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// While it could be any deterministic string, for simplicity's\n\t\t\t\t// sake mimic querystring encoding for stable key.\n\t\t\t\t//\n\t\t\t\t// TODO: For consistency with PHP implementation, addQueryArgs\n\t\t\t\t// should accept a key value pair, which may optimize its\n\t\t\t\t// implementation for our use here, vs. iterating an object\n\t\t\t\t// with only a single key.\n\t\t\t\tparts.stableKey +=\n\t\t\t\t\t( parts.stableKey ? '&' : '' ) +\n\t\t\t\t\taddQueryArgs( '', { [ key ]: value } ).slice( 1 );\n\t\t}\n\t}\n\n\treturn parts;\n}\n\nexport default withWeakMapCache( getQueryParts );\n","export * from './actions';\nexport * from './selectors';\nexport { default as reducer } from './reducer';\n","/**\n * External dependencies\n */\nimport { map, flowRight } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tconservativeMapItem,\n\tifMatchingAction,\n\treplaceAction,\n\tonSubKey,\n} from '../utils';\nimport { DEFAULT_ENTITY_KEY } from '../entities';\nimport getQueryParts from './get-query-parts';\n\n/**\n * Returns a merged array of item IDs, given details of the received paginated\n * items. The array is sparse-like with `undefined` entries where holes exist.\n *\n * @param {?Array<number>} itemIds     Original item IDs (default empty array).\n * @param {number[]}       nextItemIds Item IDs to merge.\n * @param {number}         page        Page of items merged.\n * @param {number}         perPage     Number of items per page.\n *\n * @return {number[]} Merged array of item IDs.\n */\nexport function getMergedItemIds( itemIds, nextItemIds, page, perPage ) {\n\tconst nextItemIdsStartIndex = ( page - 1 ) * perPage;\n\n\t// If later page has already been received, default to the larger known\n\t// size of the existing array, else calculate as extending the existing.\n\tconst size = Math.max(\n\t\titemIds.length,\n\t\tnextItemIdsStartIndex + nextItemIds.length\n\t);\n\n\t// Preallocate array since size is known.\n\tconst mergedItemIds = new Array( size );\n\n\tfor ( let i = 0; i < size; i++ ) {\n\t\t// Preserve existing item ID except for subset of range of next items.\n\t\tconst isInNextItemsRange =\n\t\t\ti >= nextItemIdsStartIndex &&\n\t\t\ti < nextItemIdsStartIndex + nextItemIds.length;\n\n\t\tmergedItemIds[ i ] = isInNextItemsRange\n\t\t\t? nextItemIds[ i - nextItemIdsStartIndex ]\n\t\t\t: itemIds[ i ];\n\t}\n\n\treturn mergedItemIds;\n}\n\n/**\n * Reducer tracking items state, keyed by ID. Items are assumed to be normal,\n * where identifiers are common across all queries.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nfunction items( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS':\n\t\t\tconst key = action.key || DEFAULT_ENTITY_KEY;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.items.reduce( ( accumulator, value ) => {\n\t\t\t\t\tconst itemId = value[ key ];\n\t\t\t\t\taccumulator[ itemId ] = conservativeMapItem(\n\t\t\t\t\t\tstate[ itemId ],\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}, {} ),\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer tracking queries state, keyed by stable query key. Each reducer\n * query object includes `itemIds` and `requestingPageByPerPage`.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst queries = flowRight( [\n\t// Limit to matching action type so we don't attempt to replace action on\n\t// an unhandled action.\n\tifMatchingAction( ( action ) => 'query' in action ),\n\n\t// Inject query parts into action for use both in `onSubKey` and reducer.\n\treplaceAction( ( action ) => {\n\t\t// `ifMatchingAction` still passes on initialization, where state is\n\t\t// undefined and a query is not assigned. Avoid attempting to parse\n\t\t// parts. `onSubKey` will omit by lack of `stableKey`.\n\t\tif ( action.query ) {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\t...getQueryParts( action.query ),\n\t\t\t};\n\t\t}\n\n\t\treturn action;\n\t} ),\n\n\t// Queries shape is shared, but keyed by query `stableKey` part. Original\n\t// reducer tracks only a single query object.\n\tonSubKey( 'stableKey' ),\n] )( ( state = null, action ) => {\n\tconst { type, page, perPage, key = DEFAULT_ENTITY_KEY } = action;\n\n\tif ( type !== 'RECEIVE_ITEMS' ) {\n\t\treturn state;\n\t}\n\n\treturn getMergedItemIds(\n\t\tstate || [],\n\t\tmap( action.items, key ),\n\t\tpage,\n\t\tperPage\n\t);\n} );\n\nexport default combineReducers( {\n\titems,\n\tqueries,\n} );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * Internal dependencies\n */\nimport getQueryParts from './get-query-parts';\n\n/**\n * Cache of state keys to EquivalentKeyMap where the inner map tracks queries\n * to their resulting items set. WeakMap allows garbage collection on expired\n * state references.\n *\n * @type {WeakMap<Object,EquivalentKeyMap>}\n */\nconst queriedItemsCacheByState = new WeakMap();\n\n/**\n * Returns items for a given query, or null if the items are not known.\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nfunction getQueriedItemsUncached( state, query ) {\n\tconst { stableKey, page, perPage } = getQueryParts( query );\n\n\tif ( ! state.queries[ stableKey ] ) {\n\t\treturn null;\n\t}\n\n\tconst itemIds = state.queries[ stableKey ];\n\tif ( ! itemIds ) {\n\t\treturn null;\n\t}\n\n\tconst startOffset = perPage === -1 ? 0 : ( page - 1 ) * perPage;\n\tconst endOffset =\n\t\tperPage === -1\n\t\t\t? itemIds.length\n\t\t\t: Math.min( startOffset + perPage, itemIds.length );\n\n\tconst items = [];\n\tfor ( let i = startOffset; i < endOffset; i++ ) {\n\t\tconst itemId = itemIds[ i ];\n\t\titems.push( state.items[ itemId ] );\n\t}\n\n\treturn items;\n}\n\n/**\n * Returns items for a given query, or null if the items are not known. Caches\n * result both per state (by reference) and per query (by deep equality).\n * The caching approach is intended to be durable to query objects which are\n * deeply but not referentially equal, since otherwise:\n *\n * `getQueriedItems( state, {} ) !== getQueriedItems( state, {} )`\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nexport const getQueriedItems = createSelector( ( state, query = {} ) => {\n\tlet queriedItemsCache = queriedItemsCacheByState.get( state );\n\tif ( queriedItemsCache ) {\n\t\tconst queriedItems = queriedItemsCache.get( query );\n\t\tif ( queriedItems !== undefined ) {\n\t\t\treturn queriedItems;\n\t\t}\n\t} else {\n\t\tqueriedItemsCache = new EquivalentKeyMap();\n\t\tqueriedItemsCacheByState.set( state, queriedItemsCache );\n\t}\n\n\tconst items = getQueriedItemsUncached( state, query );\n\tqueriedItemsCache.set( query, items );\n\treturn items;\n} );\n","/**\n * External dependencies\n */\nimport { keyBy, map, groupBy, flowRight, isEqual, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport { ifMatchingAction, replaceAction } from './utils';\nimport { reducer as queriedDataReducer } from './queried-data';\nimport { defaultEntities, DEFAULT_ENTITY_KEY } from './entities';\n\n/**\n * Reducer managing terms state. Keyed by taxonomy slug, the value is either\n * undefined (if no request has been made for given taxonomy), null (if a\n * request is in-flight for given taxonomy), or the array of terms for the\n * taxonomy.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function terms( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TERMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.taxonomy ]: action.terms,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing authors state. Keyed by id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function users( state = { byId: {}, queries: {} }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_QUERY':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t...keyBy( action.users, 'id' ),\n\t\t\t\t},\n\t\t\t\tqueries: {\n\t\t\t\t\t...state.queries,\n\t\t\t\t\t[ action.queryID ]: map(\n\t\t\t\t\t\taction.users,\n\t\t\t\t\t\t( user ) => user.id\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing current user state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function currentUser( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_USER':\n\t\t\treturn action.currentUser;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing taxonomies.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function taxonomies( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TAXONOMIES':\n\t\t\treturn action.taxonomies;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing theme supports data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function themeSupports( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_SUPPORTS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.themeSupports,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Higher Order Reducer for a given entity config. It supports:\n *\n *  - Fetching\n *  - Editing\n *  - Saving\n *\n * @param {Object} entityConfig  Entity config.\n *\n * @return {Function} Reducer.\n */\nfunction entity( entityConfig ) {\n\treturn flowRight( [\n\t\t// Limit to matching action type so we don't attempt to replace action on\n\t\t// an unhandled action.\n\t\tifMatchingAction(\n\t\t\t( action ) =>\n\t\t\t\taction.name &&\n\t\t\t\taction.kind &&\n\t\t\t\taction.name === entityConfig.name &&\n\t\t\t\taction.kind === entityConfig.kind\n\t\t),\n\n\t\t// Inject the entity config into the action.\n\t\treplaceAction( ( action ) => {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\tkey: entityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t};\n\t\t} ),\n\t] )(\n\t\tcombineReducers( {\n\t\t\tqueriedData: queriedDataReducer,\n\n\t\t\tedits: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'RECEIVE_ITEMS':\n\t\t\t\t\t\tconst nextState = { ...state };\n\n\t\t\t\t\t\tfor ( const record of action.items ) {\n\t\t\t\t\t\t\tconst recordId = record[ action.key ];\n\t\t\t\t\t\t\tconst edits = nextState[ recordId ];\n\t\t\t\t\t\t\tif ( ! edits ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst nextEdits = Object.keys( edits ).reduce(\n\t\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t\t// If the edited value is still different to the persisted value,\n\t\t\t\t\t\t\t\t\t// keep the edited value in edits.\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t// Edits are the \"raw\" attribute values, but records may have\n\t\t\t\t\t\t\t\t\t\t// objects with more properties, so we use `get` here for the\n\t\t\t\t\t\t\t\t\t\t// comparison.\n\t\t\t\t\t\t\t\t\t\t! isEqual(\n\t\t\t\t\t\t\t\t\t\t\tedits[ key ],\n\t\t\t\t\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\t\t\t\t\trecord[ key ],\n\t\t\t\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\t\t\t\trecord[ key ]\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( Object.keys( nextEdits ).length ) {\n\t\t\t\t\t\t\t\tnextState[ recordId ] = nextEdits;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete nextState[ recordId ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn nextState;\n\n\t\t\t\t\tcase 'EDIT_ENTITY_RECORD':\n\t\t\t\t\t\tconst nextEdits = {\n\t\t\t\t\t\t\t...state[ action.recordId ],\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.keys( nextEdits ).forEach( ( key ) => {\n\t\t\t\t\t\t\t// Delete cleared edits so that the properties\n\t\t\t\t\t\t\t// are not considered dirty.\n\t\t\t\t\t\t\tif ( nextEdits[ key ] === undefined ) {\n\t\t\t\t\t\t\t\tdelete nextEdits[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: nextEdits,\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tsaving: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type === 'SAVE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t\tisAutosave: action.isAutosave,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\t\t} )\n\t);\n}\n\n/**\n * Reducer keeping track of the registered entities.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function entitiesConfig( state = defaultEntities, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ENTITIES':\n\t\t\treturn [ ...state, ...action.entities ];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the registered entities config and data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const entities = ( state = {}, action ) => {\n\tconst newConfig = entitiesConfig( state.config, action );\n\n\t// Generates a dynamic reducer for the entities\n\tlet entitiesDataReducer = state.reducer;\n\tif ( ! entitiesDataReducer || newConfig !== state.config ) {\n\t\tconst entitiesByKind = groupBy( newConfig, 'kind' );\n\t\tentitiesDataReducer = combineReducers(\n\t\t\tObject.entries( entitiesByKind ).reduce(\n\t\t\t\t( memo, [ kind, subEntities ] ) => {\n\t\t\t\t\tconst kindReducer = combineReducers(\n\t\t\t\t\t\tsubEntities.reduce(\n\t\t\t\t\t\t\t( kindMemo, entityConfig ) => ( {\n\t\t\t\t\t\t\t\t...kindMemo,\n\t\t\t\t\t\t\t\t[ entityConfig.name ]: entity( entityConfig ),\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tmemo[ kind ] = kindReducer;\n\t\t\t\t\treturn memo;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t)\n\t\t);\n\t}\n\n\tconst newData = entitiesDataReducer( state.data, action );\n\n\tif (\n\t\tnewData === state.data &&\n\t\tnewConfig === state.config &&\n\t\tentitiesDataReducer === state.reducer\n\t) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\treducer: entitiesDataReducer,\n\t\tdata: newData,\n\t\tconfig: newConfig,\n\t};\n};\n\n/**\n * Reducer keeping track of entity edit undo history.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nconst UNDO_INITIAL_STATE = [];\nUNDO_INITIAL_STATE.offset = 0;\nlet lastEditAction;\nexport function undo( state = UNDO_INITIAL_STATE, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'EDIT_ENTITY_RECORD':\n\t\tcase 'CREATE_UNDO_LEVEL':\n\t\t\tlet isCreateUndoLevel = action.type === 'CREATE_UNDO_LEVEL';\n\t\t\tconst isUndoOrRedo =\n\t\t\t\t! isCreateUndoLevel &&\n\t\t\t\t( action.meta.isUndo || action.meta.isRedo );\n\t\t\tif ( isCreateUndoLevel ) {\n\t\t\t\taction = lastEditAction;\n\t\t\t} else if ( ! isUndoOrRedo ) {\n\t\t\t\t// Don't lose the last edit cache if the new one only has transient edits.\n\t\t\t\t// Transient edits don't create new levels so updating the cache would make\n\t\t\t\t// us skip an edit later when creating levels explicitly.\n\t\t\t\tif (\n\t\t\t\t\tObject.keys( action.edits ).some(\n\t\t\t\t\t\t( key ) => ! action.transientEdits[ key ]\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tlastEditAction = action;\n\t\t\t\t} else {\n\t\t\t\t\tlastEditAction = {\n\t\t\t\t\t\t...action,\n\t\t\t\t\t\tedits: {\n\t\t\t\t\t\t\t...( lastEditAction && lastEditAction.edits ),\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet nextState;\n\t\t\tif ( isUndoOrRedo ) {\n\t\t\t\tnextState = [ ...state ];\n\t\t\t\tnextState.offset =\n\t\t\t\t\tstate.offset + ( action.meta.isUndo ? -1 : 1 );\n\n\t\t\t\tif ( state.flattenedUndo ) {\n\t\t\t\t\t// The first undo in a sequence of undos might happen while we have\n\t\t\t\t\t// flattened undos in state. If this is the case, we want execution\n\t\t\t\t\t// to continue as if we were creating an explicit undo level. This\n\t\t\t\t\t// will result in an extra undo level being appended with the flattened\n\t\t\t\t\t// undo values.\n\t\t\t\t\tisCreateUndoLevel = true;\n\t\t\t\t\taction = lastEditAction;\n\t\t\t\t} else {\n\t\t\t\t\treturn nextState;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! action.meta.undo ) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\t// Transient edits don't create an undo level, but are\n\t\t\t// reachable in the next meaningful edit to which they\n\t\t\t// are merged. They are defined in the entity's config.\n\t\t\tif (\n\t\t\t\t! isCreateUndoLevel &&\n\t\t\t\t! Object.keys( action.edits ).some(\n\t\t\t\t\t( key ) => ! action.transientEdits[ key ]\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tnextState = [ ...state ];\n\t\t\t\tnextState.flattenedUndo = {\n\t\t\t\t\t...state.flattenedUndo,\n\t\t\t\t\t...action.edits,\n\t\t\t\t};\n\t\t\t\tnextState.offset = state.offset;\n\t\t\t\treturn nextState;\n\t\t\t}\n\n\t\t\t// Clear potential redos, because this only supports linear history.\n\t\t\tnextState =\n\t\t\t\tnextState || state.slice( 0, state.offset || undefined );\n\t\t\tnextState.offset = nextState.offset || 0;\n\t\t\tnextState.pop();\n\t\t\tif ( ! isCreateUndoLevel ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.meta.undo.kind,\n\t\t\t\t\tname: action.meta.undo.name,\n\t\t\t\t\trecordId: action.meta.undo.recordId,\n\t\t\t\t\tedits: {\n\t\t\t\t\t\t...state.flattenedUndo,\n\t\t\t\t\t\t...action.meta.undo.edits,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// When an edit is a function it's an optimization to avoid running some expensive operation.\n\t\t\t// We can't rely on the function references being the same so we opt out of comparing them here.\n\t\t\tconst comparisonUndoEdits = Object.values(\n\t\t\t\taction.meta.undo.edits\n\t\t\t).filter( ( edit ) => typeof edit !== 'function' );\n\t\t\tconst comparisonEdits = Object.values( action.edits ).filter(\n\t\t\t\t( edit ) => typeof edit !== 'function'\n\t\t\t);\n\t\t\tif ( ! isShallowEqual( comparisonUndoEdits, comparisonEdits ) ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.kind,\n\t\t\t\t\tname: action.name,\n\t\t\t\t\trecordId: action.recordId,\n\t\t\t\t\tedits: isCreateUndoLevel\n\t\t\t\t\t\t? { ...state.flattenedUndo, ...action.edits }\n\t\t\t\t\t\t: action.edits,\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing embed preview data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function embedPreviews( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_EMBED_PREVIEW':\n\t\t\tconst { url, preview } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ url ]: preview,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n/**\n * State which tracks whether the user can perform an action on a REST\n * resource.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function userPermissions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PERMISSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.key ]: action.isAllowed,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning autosaves keyed by their parent's post id.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function autosaves( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_AUTOSAVES':\n\t\t\tconst { postId, autosaves: autosavesData } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: autosavesData,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tterms,\n\tusers,\n\tcurrentUser,\n\ttaxonomies,\n\tthemeSupports,\n\tentities,\n\tundo,\n\tembedPreviews,\n\tuserPermissions,\n\tautosaves,\n} );\n","/**\n * External dependencies\n */\nimport { find, includes, get, hasIn, compact } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport {\n\treceiveUserQuery,\n\treceiveCurrentUser,\n\treceiveEntityRecords,\n\treceiveThemeSupports,\n\treceiveEmbedPreview,\n\treceiveUserPermission,\n\treceiveAutosaves,\n} from './actions';\nimport { getKindEntities } from './entities';\nimport { apiFetch, resolveSelect } from './controls';\n\n/**\n * Requests authors from the REST API.\n */\nexport function* getAuthors() {\n\tconst users = yield apiFetch( {\n\t\tpath: '/wp/v2/users/?who=authors&per_page=-1',\n\t} );\n\tyield receiveUserQuery( 'authors', users );\n}\n\n/**\n * Requests the current user from the REST API.\n */\nexport function* getCurrentUser() {\n\tconst currentUser = yield apiFetch( { path: '/wp/v2/users/me' } );\n\tyield receiveCurrentUser( currentUser );\n}\n\n/**\n * Requests an entity's record from the REST API.\n *\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key\n */\nexport function* getEntityRecord( kind, name, key = '' ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst record = yield apiFetch( {\n\t\tpath: `${ entity.baseURL }/${ key }?context=edit`,\n\t} );\n\tyield receiveEntityRecords( kind, name, record );\n}\n\n/**\n * Requests the entity's records from the REST API.\n *\n * @param {string}  kind   Entity kind.\n * @param {string}  name   Entity name.\n * @param {Object?} query  Query Object.\n */\nexport function* getEntityRecords( kind, name, query = {} ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst path = addQueryArgs( entity.baseURL, {\n\t\t...query,\n\t\tcontext: 'edit',\n\t} );\n\tconst records = yield apiFetch( { path } );\n\tyield receiveEntityRecords( kind, name, Object.values( records ), query );\n}\n\ngetEntityRecords.shouldInvalidate = ( action, kind, name ) => {\n\treturn (\n\t\taction.type === 'RECEIVE_ITEMS' &&\n\t\taction.invalidateCache &&\n\t\tkind === action.kind &&\n\t\tname === action.name\n\t);\n};\n\n/**\n * Requests theme supports data from the index.\n */\nexport function* getThemeSupports() {\n\tconst activeThemes = yield apiFetch( {\n\t\tpath: '/wp/v2/themes?status=active',\n\t} );\n\tyield receiveThemeSupports( activeThemes[ 0 ].theme_supports );\n}\n\n/**\n * Requests a preview from the from the Embed API.\n *\n * @param {string} url   URL to get the preview for.\n */\nexport function* getEmbedPreview( url ) {\n\ttry {\n\t\tconst embedProxyResponse = yield apiFetch( {\n\t\t\tpath: addQueryArgs( '/oembed/1.0/proxy', { url } ),\n\t\t} );\n\t\tyield receiveEmbedPreview( url, embedProxyResponse );\n\t} catch ( error ) {\n\t\t// Embed API 404s if the URL cannot be embedded, so we have to catch the error from the apiRequest here.\n\t\tyield receiveEmbedPreview( url, false );\n\t}\n}\n\n/**\n * Requests Upload Permissions from the REST API.\n *\n * @deprecated since 5.0. Callers should use the more generic `canUser()` selector instead of\n *            `hasUploadPermissions()`, e.g. `canUser( 'create', 'media' )`.\n */\nexport function* hasUploadPermissions() {\n\tdeprecated( \"select( 'core' ).hasUploadPermissions()\", {\n\t\talternative: \"select( 'core' ).canUser( 'create', 'media' )\",\n\t} );\n\tyield* canUser( 'create', 'media' );\n}\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string}  action   Action to check. One of: 'create', 'read', 'update',\n *                           'delete'.\n * @param {string}  resource REST resource to check, e.g. 'media' or 'posts'.\n * @param {?string} id       ID of the rest resource to check.\n */\nexport function* canUser( action, resource, id ) {\n\tconst methods = {\n\t\tcreate: 'POST',\n\t\tread: 'GET',\n\t\tupdate: 'PUT',\n\t\tdelete: 'DELETE',\n\t};\n\n\tconst method = methods[ action ];\n\tif ( ! method ) {\n\t\tthrow new Error( `'${ action }' is not a valid action.` );\n\t}\n\n\tconst path = id ? `/wp/v2/${ resource }/${ id }` : `/wp/v2/${ resource }`;\n\n\tlet response;\n\ttry {\n\t\tresponse = yield apiFetch( {\n\t\t\tpath,\n\t\t\t// Ideally this would always be an OPTIONS request, but unfortunately there's\n\t\t\t// a bug in the REST API which causes the Allow header to not be sent on\n\t\t\t// OPTIONS requests to /posts/:id routes.\n\t\t\t// https://core.trac.wordpress.org/ticket/45753\n\t\t\tmethod: id ? 'GET' : 'OPTIONS',\n\t\t\tparse: false,\n\t\t} );\n\t} catch ( error ) {\n\t\t// Do nothing if our OPTIONS request comes back with an API error (4xx or\n\t\t// 5xx). The previously determined isAllowed value will remain in the store.\n\t\treturn;\n\t}\n\n\tlet allowHeader;\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\tallowHeader = response.headers.get( 'allow' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\tallowHeader = get( response, [ 'headers', 'Allow' ], '' );\n\t}\n\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\tconst isAllowed = includes( allowHeader, method );\n\tyield receiveUserPermission( key, isAllowed );\n}\n\n/**\n * Request autosave data from the REST API.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport function* getAutosaves( postType, postId ) {\n\tconst { rest_base: restBase } = yield resolveSelect(\n\t\t'getPostType',\n\t\tpostType\n\t);\n\tconst autosaves = yield apiFetch( {\n\t\tpath: `/wp/v2/${ restBase }/${ postId }/autosaves?context=edit`,\n\t} );\n\n\tif ( autosaves && autosaves.length ) {\n\t\tyield receiveAutosaves( postId, autosaves );\n\t}\n}\n\n/**\n * Request autosave data from the REST API.\n *\n * This resolver exists to ensure the underlying autosaves are fetched via\n * `getAutosaves` when a call to the `getAutosave` selector is made.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport function* getAutosave( postType, postId ) {\n\tyield resolveSelect( 'getAutosaves', postType, postId );\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { map, find, get, filter, compact, defaultTo } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { REDUCER_KEY } from './name';\nimport { getQueriedItems } from './queried-data';\n\n/**\n * Returns true if a request is in progress for embed preview data, or false\n * otherwise.\n *\n * @param {Object} state Data state.\n * @param {string} url   URL the preview would be for.\n *\n * @return {boolean} Whether a request is in progress for an embed preview.\n */\nexport const isRequestingEmbedPreview = createRegistrySelector(\n\t( select ) => ( state, url ) => {\n\t\treturn select( 'core/data' ).isResolving(\n\t\t\tREDUCER_KEY,\n\t\t\t'getEmbedPreview',\n\t\t\t[ url ]\n\t\t);\n\t}\n);\n\n/**\n * Returns all available authors.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Authors list.\n */\nexport function getAuthors( state ) {\n\treturn getUserQueryResults( state, 'authors' );\n}\n\n/**\n * Returns the current user.\n *\n * @param {Object} state Data state.\n *\n * @return {Object} Current user object.\n */\nexport function getCurrentUser( state ) {\n\treturn state.currentUser;\n}\n\n/**\n * Returns all the users returned by a query ID.\n *\n * @param {Object} state   Data state.\n * @param {string} queryID Query ID.\n *\n * @return {Array} Users list.\n */\nexport const getUserQueryResults = createSelector(\n\t( state, queryID ) => {\n\t\tconst queryResults = state.users.queries[ queryID ];\n\n\t\treturn map( queryResults, ( id ) => state.users.byId[ id ] );\n\t},\n\t( state, queryID ) => [ state.users.queries[ queryID ], state.users.byId ]\n);\n\n/**\n * Returns whether the entities for the give kind are loaded.\n *\n * @param {Object} state   Data state.\n * @param {string} kind  Entity kind.\n *\n * @return {boolean} Whether the entities are loaded\n */\nexport function getEntitiesByKind( state, kind ) {\n\treturn filter( state.entities.config, { kind } );\n}\n\n/**\n * Returns the entity object given its kind and name.\n *\n * @param {Object} state   Data state.\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n *\n * @return {Object} Entity\n */\nexport function getEntity( state, kind, name ) {\n\treturn find( state.entities.config, { kind, name } );\n}\n\n/**\n * Returns the Entity's record object by key.\n *\n * @param {Object} state  State tree\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key\n *\n * @return {Object?} Record.\n */\nexport function getEntityRecord( state, kind, name, key ) {\n\treturn get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'queriedData',\n\t\t'items',\n\t\tkey,\n\t] );\n}\n\n/**\n * Returns the Entity's record object by key. Doesn't trigger a resolver nor requests the entity from the API if the entity record isn't available in the local state.\n *\n * @param {Object} state  State tree\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key\n *\n * @return {Object?} Record.\n */\nexport function __experimentalGetEntityRecordNoResolver(\n\tstate,\n\tkind,\n\tname,\n\tkey\n) {\n\treturn getEntityRecord( state, kind, name, key );\n}\n\n/**\n * Returns the entity's record object by key,\n * with its attributes mapped to their raw values.\n *\n * @param {Object} state  State tree.\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key.\n *\n * @return {Object?} Object with the entity's raw attributes.\n */\nexport const getRawEntityRecord = createSelector(\n\t( state, kind, name, key ) => {\n\t\tconst record = getEntityRecord( state, kind, name, key );\n\t\treturn (\n\t\t\trecord &&\n\t\t\tObject.keys( record ).reduce( ( accumulator, _key ) => {\n\t\t\t\t// Because edits are the \"raw\" attribute values,\n\t\t\t\t// we return those from record selectors to make rendering,\n\t\t\t\t// comparisons, and joins with edits easier.\n\t\t\t\taccumulator[ _key ] = get(\n\t\t\t\t\trecord[ _key ],\n\t\t\t\t\t'raw',\n\t\t\t\t\trecord[ _key ]\n\t\t\t\t);\n\t\t\t\treturn accumulator;\n\t\t\t}, {} )\n\t\t);\n\t},\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns the Entity's records.\n *\n * @param {Object}  state  State tree\n * @param {string}  kind   Entity kind.\n * @param {string}  name   Entity name.\n * @param {?Object} query  Optional terms query.\n *\n * @return {Array} Records.\n */\nexport function getEntityRecords( state, kind, name, query ) {\n\tconst queriedState = get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'queriedData',\n\t] );\n\tif ( ! queriedState ) {\n\t\treturn [];\n\t}\n\treturn getQueriedItems( queriedState, query );\n}\n\n/**\n * Returns a map of objects with each edited\n * raw entity record and its corresponding edits.\n *\n * The map is keyed by entity `kind => name => key => { rawRecord, edits }`.\n *\n * @param {Object} state State tree.\n *\n * @return {{ [kind: string]: { [name: string]: { [key: string]: { rawRecord: Object<string,*>, edits: Object<string,*> } } } }} The map of edited records with their edits.\n */\nexport const getEntityRecordChangesByRecord = createSelector(\n\t( state ) => {\n\t\tconst {\n\t\t\tentities: { data },\n\t\t} = state;\n\t\treturn Object.keys( data ).reduce( ( acc, kind ) => {\n\t\t\tObject.keys( data[ kind ] ).forEach( ( name ) => {\n\t\t\t\tconst editsKeys = Object.keys(\n\t\t\t\t\tdata[ kind ][ name ].edits\n\t\t\t\t).filter( ( editsKey ) =>\n\t\t\t\t\thasEditsForEntityRecord( state, kind, name, editsKey )\n\t\t\t\t);\n\t\t\t\tif ( editsKeys.length ) {\n\t\t\t\t\tif ( ! acc[ kind ] ) {\n\t\t\t\t\t\tacc[ kind ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! acc[ kind ][ name ] ) {\n\t\t\t\t\t\tacc[ kind ][ name ] = {};\n\t\t\t\t\t}\n\t\t\t\t\teditsKeys.forEach(\n\t\t\t\t\t\t( editsKey ) =>\n\t\t\t\t\t\t\t( acc[ kind ][ name ][ editsKey ] = {\n\t\t\t\t\t\t\t\trawRecord: getRawEntityRecord(\n\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\teditsKey\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tedits: getEntityRecordNonTransientEdits(\n\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\teditsKey\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn acc;\n\t\t}, {} );\n\t},\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns the specified entity record's edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's edits.\n */\nexport function getEntityRecordEdits( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [ kind, name, 'edits', recordId ] );\n}\n\n/**\n * Returns the specified entity record's non transient edits.\n *\n * Transient edits don't create an undo level, and\n * are not considered for change detection.\n * They are defined in the entity's config.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's non transient edits.\n */\nexport const getEntityRecordNonTransientEdits = createSelector(\n\t( state, kind, name, recordId ) => {\n\t\tconst { transientEdits } = getEntity( state, kind, name ) || {};\n\t\tconst edits = getEntityRecordEdits( state, kind, name, recordId ) || {};\n\t\tif ( ! transientEdits ) {\n\t\t\treturn edits;\n\t\t}\n\t\treturn Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tif ( ! transientEdits[ key ] ) {\n\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {} );\n\t},\n\t( state ) => [ state.entities.config, state.entities.data ]\n);\n\n/**\n * Returns true if the specified entity record has edits,\n * and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record has edits or not.\n */\nexport function hasEditsForEntityRecord( state, kind, name, recordId ) {\n\treturn (\n\t\tisSavingEntityRecord( state, kind, name, recordId ) ||\n\t\tObject.keys(\n\t\t\tgetEntityRecordNonTransientEdits( state, kind, name, recordId )\n\t\t).length > 0\n\t);\n}\n\n/**\n * Returns the specified entity record, merged with its edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record, merged with its edits.\n */\nexport const getEditedEntityRecord = createSelector(\n\t( state, kind, name, recordId ) => ( {\n\t\t...getRawEntityRecord( state, kind, name, recordId ),\n\t\t...getEntityRecordEdits( state, kind, name, recordId ),\n\t} ),\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns true if the specified entity record is autosaving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is autosaving or not.\n */\nexport function isAutosavingEntityRecord( state, kind, name, recordId ) {\n\tconst { pending, isAutosave } = get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'saving', recordId ],\n\t\t{}\n\t);\n\treturn Boolean( pending && isAutosave );\n}\n\n/**\n * Returns true if the specified entity record is saving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is saving or not.\n */\nexport function isSavingEntityRecord( state, kind, name, recordId ) {\n\treturn get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'saving', recordId, 'pending' ],\n\t\tfalse\n\t);\n}\n\n/**\n * Returns the specified entity record's last save error.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's save error.\n */\nexport function getLastEntitySaveError( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'saving',\n\t\trecordId,\n\t\t'error',\n\t] );\n}\n\n/**\n * Returns the current undo offset for the\n * entity records edits history. The offset\n * represents how many items from the end\n * of the history stack we are at. 0 is the\n * last edit, -1 is the second last, and so on.\n *\n * @param {Object} state State tree.\n *\n * @return {number} The current undo offset.\n */\nfunction getCurrentUndoOffset( state ) {\n\treturn state.undo.offset;\n}\n\n/**\n * Returns the previous edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getUndoEdit( state ) {\n\treturn state.undo[ state.undo.length - 2 + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns the next edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getRedoEdit( state ) {\n\treturn state.undo[ state.undo.length + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns true if there is a previous edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a previous edit or not.\n */\nexport function hasUndo( state ) {\n\treturn Boolean( getUndoEdit( state ) );\n}\n\n/**\n * Returns true if there is a next edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a next edit or not.\n */\nexport function hasRedo( state ) {\n\treturn Boolean( getRedoEdit( state ) );\n}\n\n/**\n * Return theme supports data in the index.\n *\n * @param {Object} state Data state.\n *\n * @return {*}           Index data.\n */\nexport function getThemeSupports( state ) {\n\treturn state.themeSupports;\n}\n\n/**\n * Returns the embed preview for the given URL.\n *\n * @param {Object} state    Data state.\n * @param {string} url      Embedded URL.\n *\n * @return {*} Undefined if the preview has not been fetched, otherwise, the preview fetched from the embed preview API.\n */\nexport function getEmbedPreview( state, url ) {\n\treturn state.embedPreviews[ url ];\n}\n\n/**\n * Determines if the returned preview is an oEmbed link fallback.\n *\n * WordPress can be configured to return a simple link to a URL if it is not embeddable.\n * We need to be able to determine if a URL is embeddable or not, based on what we\n * get back from the oEmbed preview API.\n *\n * @param {Object} state    Data state.\n * @param {string} url      Embedded URL.\n *\n * @return {boolean} Is the preview for the URL an oEmbed link fallback.\n */\nexport function isPreviewEmbedFallback( state, url ) {\n\tconst preview = state.embedPreviews[ url ];\n\tconst oEmbedLinkCheck = '<a href=\"' + url + '\">' + url + '</a>';\n\tif ( ! preview ) {\n\t\treturn false;\n\t}\n\treturn preview.html === oEmbedLinkCheck;\n}\n\n/**\n * Returns whether the current user can upload media.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @deprecated since 5.0. Callers should use the more generic `canUser()` selector instead of\n *             `hasUploadPermissions()`, e.g. `canUser( 'create', 'media' )`.\n *\n * @param {Object} state Data state.\n *\n * @return {boolean} Whether or not the user can upload media. Defaults to `true` if the OPTIONS\n *                   request is being made.\n */\nexport function hasUploadPermissions( state ) {\n\tdeprecated( \"select( 'core' ).hasUploadPermissions()\", {\n\t\talternative: \"select( 'core' ).canUser( 'create', 'media' )\",\n\t} );\n\treturn defaultTo( canUser( state, 'create', 'media' ), true );\n}\n\n/**\n * Returns whether the current user can perform the given action on the given\n * REST resource.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param {Object}   state            Data state.\n * @param {string}   action           Action to check. One of: 'create', 'read', 'update', 'delete'.\n * @param {string}   resource         REST resource to check, e.g. 'media' or 'posts'.\n * @param {string=}  id               Optional ID of the rest resource to check.\n *\n * @return {boolean|undefined} Whether or not the user can perform the action,\n *                             or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUser( state, action, resource, id ) {\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\treturn get( state, [ 'userPermissions', key ] );\n}\n\n/**\n * Returns the latest autosaves for the post.\n *\n * May return multiple autosaves since the backend stores one autosave per\n * author for each post.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {?Array} An array of autosaves for the post, or undefined if there is none.\n */\nexport function getAutosaves( state, postType, postId ) {\n\treturn state.autosaves[ postId ];\n}\n\n/**\n * Returns the autosave for the post and author.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n * @param {number} authorId The id of the author.\n *\n * @return {?Object} The autosave for the post and author.\n */\nexport function getAutosave( state, postType, postId, authorId ) {\n\tif ( authorId === undefined ) {\n\t\treturn;\n\t}\n\n\tconst autosaves = state.autosaves[ postId ];\n\treturn find( autosaves, { author: authorId } );\n}\n\n/**\n * Returns true if the REST request for autosaves has completed.\n *\n * @param {Object} state State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {boolean} True if the REST request was completed. False otherwise.\n */\nexport const hasFetchedAutosaves = createRegistrySelector(\n\t( select ) => ( state, postType, postId ) => {\n\t\treturn select( REDUCER_KEY ).hasFinishedResolution( 'getAutosaves', [\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t] );\n\t}\n);\n\n/**\n * Returns a new reference when edited values have changed. This is useful in\n * inferring where an edit has been made between states by comparison of the\n * return values using strict equality.\n *\n * @example\n *\n * ```\n * const hasEditOccurred = (\n *    getReferenceByDistinctEdits( beforeState ) !==\n *    getReferenceByDistinctEdits( afterState )\n * );\n * ```\n *\n * @param {Object} state Editor state.\n *\n * @return {*} A value whose reference will change only when an edit occurs.\n */\nexport const getReferenceByDistinctEdits = createSelector(\n\t() => [],\n\t( state ) => [ state.undo.length, state.undo.offset ]\n);\n","/**\n * External dependencies\n */\nimport { isEqual } from 'lodash';\n\n/**\n * Given the current and next item entity, returns the minimally \"modified\"\n * result of the next item, preferring value references from the original item\n * if equal. If all values match, the original item is returned.\n *\n * @param {Object} item     Original item.\n * @param {Object} nextItem Next item.\n *\n * @return {Object} Minimally modified merged item.\n */\nexport default function conservativeMapItem( item, nextItem ) {\n\t// Return next item in its entirety if there is no original item.\n\tif ( ! item ) {\n\t\treturn nextItem;\n\t}\n\n\tlet hasChanges = false;\n\tconst result = {};\n\tfor ( const key in nextItem ) {\n\t\tif ( isEqual( item[ key ], nextItem[ key ] ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t} else {\n\t\t\thasChanges = true;\n\t\t\tresult[ key ] = nextItem[ key ];\n\t\t}\n\t}\n\n\tif ( ! hasChanges ) {\n\t\treturn item;\n\t}\n\treturn result;\n}\n","/**\n * A higher-order reducer creator which invokes the original reducer only if\n * the dispatching action matches the given predicate, **OR** if state is\n * initializing (undefined).\n *\n * @param {Function} isMatch Function predicate for allowing reducer call.\n *\n * @return {Function} Higher-order reducer.\n */\nconst ifMatchingAction = ( isMatch ) => ( reducer ) => ( state, action ) => {\n\tif ( state === undefined || isMatch( action ) ) {\n\t\treturn reducer( state, action );\n\t}\n\n\treturn state;\n};\n\nexport default ifMatchingAction;\n","export { default as conservativeMapItem } from './conservative-map-item';\nexport { default as ifMatchingAction } from './if-matching-action';\nexport { default as onSubKey } from './on-sub-key';\nexport { default as replaceAction } from './replace-action';\nexport { default as withWeakMapCache } from './with-weak-map-cache';\n","/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param {string} actionProperty Action property by which to key object.\n *\n * @return {Function} Higher-order reducer.\n */\nexport const onSubKey = ( actionProperty ) => ( reducer ) => (\n\tstate = {},\n\taction\n) => {\n\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t// where reducer is scoped by action shape.\n\tconst key = action[ actionProperty ];\n\tif ( key === undefined ) {\n\t\treturn state;\n\t}\n\n\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t// reducer which returns undefined on a key which is not yet tracked.\n\tconst nextKeyState = reducer( state[ key ], action );\n\tif ( nextKeyState === state[ key ] ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ key ]: nextKeyState,\n\t};\n};\n\nexport default onSubKey;\n","/**\n * Higher-order reducer creator which substitutes the action object before\n * passing to the original reducer.\n *\n * @param {Function} replacer Function mapping original action to replacement.\n *\n * @return {Function} Higher-order reducer.\n */\nconst replaceAction = ( replacer ) => ( reducer ) => ( state, action ) => {\n\treturn reducer( state, replacer( action ) );\n};\n\nexport default replaceAction;\n","/**\n * External dependencies\n */\nimport { isObjectLike } from 'lodash';\n\n/**\n * Given a function, returns an enhanced function which caches the result and\n * tracks in WeakMap. The result is only cached if the original function is\n * passed a valid object-like argument (requirement for WeakMap key).\n *\n * @param {Function} fn Original function.\n *\n * @return {Function} Enhanced caching function.\n */\nfunction withWeakMapCache( fn ) {\n\tconst cache = new WeakMap();\n\n\treturn function( key ) {\n\t\tlet value;\n\t\tif ( cache.has( key ) ) {\n\t\t\tvalue = cache.get( key );\n\t\t} else {\n\t\t\tvalue = fn( key );\n\n\t\t\t// Can reach here if key is not valid for WeakMap, since `has`\n\t\t\t// will return false for invalid key. Since `set` will throw,\n\t\t\t// ensure that key is valid before setting into cache.\n\t\t\tif ( isObjectLike( key ) ) {\n\t\t\t\tcache.set( key, value );\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n}\n\nexport default withWeakMapCache;\n","'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Given an instance of EquivalentKeyMap, returns its internal value pair tuple\n * for a key, if one exists. The tuple members consist of the last reference\n * value for the key (used in efficient subsequent lookups) and the value\n * assigned for the key at the leaf node.\n *\n * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.\n * @param {*} key                     The key for which to return value pair.\n *\n * @return {?Array} Value pair, if exists.\n */\nfunction getValuePair(instance, key) {\n  var _map = instance._map,\n      _arrayTreeMap = instance._arrayTreeMap,\n      _objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the\n  // value, which can be used to shortcut immediately to the value.\n\n  if (_map.has(key)) {\n    return _map.get(key);\n  } // Sort keys to ensure stable retrieval from tree.\n\n\n  var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n  var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    map = map.get(property);\n\n    if (map === undefined) {\n      return;\n    }\n\n    var propertyValue = key[property];\n    map = map.get(propertyValue);\n\n    if (map === undefined) {\n      return;\n    }\n  }\n\n  var valuePair = map.get('_ekm_value');\n\n  if (!valuePair) {\n    return;\n  } // If reached, it implies that an object-like key was set with another\n  // reference, so delete the reference and replace with the current.\n\n\n  _map.delete(valuePair[0]);\n\n  valuePair[0] = key;\n  map.set('_ekm_value', valuePair);\n\n  _map.set(key, valuePair);\n\n  return valuePair;\n}\n/**\n * Variant of a Map object which enables lookup by equivalent (deeply equal)\n * object and array keys.\n */\n\n\nvar EquivalentKeyMap =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new instance of EquivalentKeyMap.\n   *\n   * @param {Iterable.<*>} iterable Initial pair of key, value for map.\n   */\n  function EquivalentKeyMap(iterable) {\n    _classCallCheck(this, EquivalentKeyMap);\n\n    this.clear();\n\n    if (iterable instanceof EquivalentKeyMap) {\n      // Map#forEach is only means of iterating with support for IE11.\n      var iterablePairs = [];\n      iterable.forEach(function (value, key) {\n        iterablePairs.push([key, value]);\n      });\n      iterable = iterablePairs;\n    }\n\n    if (iterable != null) {\n      for (var i = 0; i < iterable.length; i++) {\n        this.set(iterable[i][0], iterable[i][1]);\n      }\n    }\n  }\n  /**\n   * Accessor property returning the number of elements.\n   *\n   * @return {number} Number of elements.\n   */\n\n\n  _createClass(EquivalentKeyMap, [{\n    key: \"set\",\n\n    /**\n     * Add or update an element with a specified key and value.\n     *\n     * @param {*} key   The key of the element to add.\n     * @param {*} value The value of the element to add.\n     *\n     * @return {EquivalentKeyMap} Map instance.\n     */\n    value: function set(key, value) {\n      // Shortcut non-object-like to set on internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        this._map.set(key, value);\n\n        return this;\n      } // Sort keys to ensure stable assignment into tree.\n\n\n      var properties = Object.keys(key).sort();\n      var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n      var map = Array.isArray(key) ? this._arrayTreeMap : this._objectTreeMap;\n\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n\n        if (!map.has(property)) {\n          map.set(property, new EquivalentKeyMap());\n        }\n\n        map = map.get(property);\n        var propertyValue = key[property];\n\n        if (!map.has(propertyValue)) {\n          map.set(propertyValue, new EquivalentKeyMap());\n        }\n\n        map = map.get(propertyValue);\n      } // If an _ekm_value exists, there was already an equivalent key. Before\n      // overriding, ensure that the old key reference is removed from map to\n      // avoid memory leak of accumulating equivalent keys. This is, in a\n      // sense, a poor man's WeakMap, while still enabling iterability.\n\n\n      var previousValuePair = map.get('_ekm_value');\n\n      if (previousValuePair) {\n        this._map.delete(previousValuePair[0]);\n      }\n\n      map.set('_ekm_value', valuePair);\n\n      this._map.set(key, valuePair);\n\n      return this;\n    }\n    /**\n     * Returns a specified element.\n     *\n     * @param {*} key The key of the element to return.\n     *\n     * @return {?*} The element associated with the specified key or undefined\n     *              if the key can't be found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      // Shortcut non-object-like to get from internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.get(key);\n      }\n\n      var valuePair = getValuePair(this, key);\n\n      if (valuePair) {\n        return valuePair[1];\n      }\n    }\n    /**\n     * Returns a boolean indicating whether an element with the specified key\n     * exists or not.\n     *\n     * @param {*} key The key of the element to test for presence.\n     *\n     * @return {boolean} Whether an element with the specified key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.has(key);\n      } // Test on the _presence_ of the pair, not its value, as even undefined\n      // can be a valid member value for a key.\n\n\n      return getValuePair(this, key) !== undefined;\n    }\n    /**\n     * Removes the specified element.\n     *\n     * @param {*} key The key of the element to remove.\n     *\n     * @return {boolean} Returns true if an element existed and has been\n     *                   removed, or false if the element does not exist.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      if (!this.has(key)) {\n        return false;\n      } // This naive implementation will leave orphaned child trees. A better\n      // implementation should traverse and remove orphans.\n\n\n      this.set(key, undefined);\n      return true;\n    }\n    /**\n     * Executes a provided function once per each key/value pair, in insertion\n     * order.\n     *\n     * @param {Function} callback Function to execute for each element.\n     * @param {*}        thisArg  Value to use as `this` when executing\n     *                            `callback`.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _this = this;\n\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      this._map.forEach(function (value, key) {\n        // Unwrap value from object-like value pair.\n        if (key !== null && _typeof(key) === 'object') {\n          value = value[1];\n        }\n\n        callback.call(thisArg, value, key, _this);\n      });\n    }\n    /**\n     * Removes all elements.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = new Map();\n      this._arrayTreeMap = new Map();\n      this._objectTreeMap = new Map();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._map.size;\n    }\n  }]);\n\n  return EquivalentKeyMap;\n}();\n\nmodule.exports = EquivalentKeyMap;\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","(function() { module.exports = this[\"regeneratorRuntime\"]; }());","(function() { module.exports = this[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"deprecated\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"isShallowEqual\"]; }());","(function() { module.exports = this[\"wp\"][\"url\"]; }());","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}