{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://wp/@wordpress/autop/src/index.js"],"names":["htmlSplitRegex","comments","cdata","escaped","regex","RegExp","htmlSplit","input","parts","workingInput","match","push","slice","index","length","replaceInHtmlTags","haystack","replacePairs","textArr","changed","needles","Object","keys","i","j","needle","indexOf","replace","join","autop","text","br","preTags","trim","textParts","split","lastText","pop","textPart","start","name","substr","allBlocks","texts","filter","Boolean","forEach","textPiece","a","b","preTag","original","removep","html","blocklist","blocklist1","blocklist2","preserve","preserveLinebreaks","preserveBr","space","shift"],"mappings":"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","file":"autop.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/@wordpress/autop/build-module/index.js\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * The regular expression for an HTML element.\n *\n * @type {string}\n */\nconst htmlSplitRegex = ( () => {\n\t/* eslint-disable no-multi-spaces */\n\tconst comments =\n\t\t'!' + // Start of comment, after the <.\n\t\t'(?:' + // Unroll the loop: Consume everything until --> is found.\n\t\t'-(?!->)' + // Dash not followed by end of comment.\n\t\t'[^\\\\-]*' + // Consume non-dashes.\n\t\t')*' + // Loop possessively.\n\t\t'(?:-->)?'; // End of comment. If not found, match all input.\n\n\tconst cdata =\n\t\t'!\\\\[CDATA\\\\[' + // Start of comment, after the <.\n\t\t'[^\\\\]]*' + // Consume non-].\n\t\t'(?:' + // Unroll the loop: Consume everything until ]]> is found.\n\t\t'](?!]>)' + // One ] not followed by end of comment.\n\t\t'[^\\\\]]*' + // Consume non-].\n\t\t')*?' + // Loop possessively.\n\t\t'(?:]]>)?'; // End of comment. If not found, match all input.\n\n\tconst escaped =\n\t\t'(?=' + // Is the element escaped?\n\t\t'!--' +\n\t\t'|' +\n\t\t'!\\\\[CDATA\\\\[' +\n\t\t')' +\n\t\t'((?=!-)' + // If yes, which type?\n\t\tcomments +\n\t\t'|' +\n\t\tcdata +\n\t\t')';\n\n\tconst regex =\n\t\t'(' + // Capture the entire match.\n\t\t'<' + // Find start of element.\n\t\t'(' + // Conditional expression follows.\n\t\tescaped + // Find end of escaped element.\n\t\t'|' + // ... else ...\n\t\t'[^>]*>?' + // Find end of normal element.\n\t\t')' +\n\t\t')';\n\n\treturn new RegExp( regex );\n\t/* eslint-enable no-multi-spaces */\n} )();\n\n/**\n * Separate HTML elements and comments from the text.\n *\n * @param  {string} input The text which has to be formatted.\n * @return {Array}        The formatted text.\n */\nfunction htmlSplit( input ) {\n\tconst parts = [];\n\tlet workingInput = input;\n\n\tlet match;\n\twhile ( ( match = workingInput.match( htmlSplitRegex ) ) ) {\n\t\tparts.push( workingInput.slice( 0, match.index ) );\n\t\tparts.push( match[ 0 ] );\n\t\tworkingInput = workingInput.slice( match.index + match[ 0 ].length );\n\t}\n\n\tif ( workingInput.length ) {\n\t\tparts.push( workingInput );\n\t}\n\n\treturn parts;\n}\n\n/**\n * Replace characters or phrases within HTML elements only.\n *\n * @param  {string} haystack     The text which has to be formatted.\n * @param  {Object} replacePairs In the form {from: 'to', ...}.\n * @return {string}              The formatted text.\n */\nfunction replaceInHtmlTags( haystack, replacePairs ) {\n\t// Find all elements.\n\tconst textArr = htmlSplit( haystack );\n\tlet changed = false;\n\n\t// Extract all needles.\n\tconst needles = Object.keys( replacePairs );\n\n\t// Loop through delimiters (elements) only.\n\tfor ( let i = 1; i < textArr.length; i += 2 ) {\n\t\tfor ( let j = 0; j < needles.length; j++ ) {\n\t\t\tconst needle = needles[ j ];\n\t\t\tif ( -1 !== textArr[ i ].indexOf( needle ) ) {\n\t\t\t\ttextArr[ i ] = textArr[ i ].replace(\n\t\t\t\t\tnew RegExp( needle, 'g' ),\n\t\t\t\t\treplacePairs[ needle ]\n\t\t\t\t);\n\t\t\t\tchanged = true;\n\t\t\t\t// After one strtr() break out of the foreach loop and look at next element.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( changed ) {\n\t\thaystack = textArr.join( '' );\n\t}\n\n\treturn haystack;\n}\n\n/**\n * Replaces double line-breaks with paragraph elements.\n *\n * A group of regex replaces used to identify text formatted with newlines and\n * replace double line-breaks with HTML paragraph tags. The remaining line-\n * breaks after conversion become `<br />` tags, unless br is set to 'false'.\n *\n * @param  {string}    text The text which has to be formatted.\n * @param  {boolean}   br   Optional. If set, will convert all remaining line-\n *                          breaks after paragraphing. Default true.\n *\n * @example\n *```js\n * import { autop } from '@wordpress/autop';\n * autop( 'my text' ); // \"<p>my text</p>\"\n * ```\n *\n * @return {string}         Text which has been converted into paragraph tags.\n */\nexport function autop( text, br = true ) {\n\tconst preTags = [];\n\n\tif ( text.trim() === '' ) {\n\t\treturn '';\n\t}\n\n\t// Just to make things a little easier, pad the end.\n\ttext = text + '\\n';\n\n\t/*\n\t * Pre tags shouldn't be touched by autop.\n\t * Replace pre tags with placeholders and bring them back after autop.\n\t */\n\tif ( text.indexOf( '<pre' ) !== -1 ) {\n\t\tconst textParts = text.split( '</pre>' );\n\t\tconst lastText = textParts.pop();\n\t\ttext = '';\n\n\t\tfor ( let i = 0; i < textParts.length; i++ ) {\n\t\t\tconst textPart = textParts[ i ];\n\t\t\tconst start = textPart.indexOf( '<pre' );\n\n\t\t\t// Malformed html?\n\t\t\tif ( start === -1 ) {\n\t\t\t\ttext += textPart;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst name = '<pre wp-pre-tag-' + i + '></pre>';\n\t\t\tpreTags.push( [ name, textPart.substr( start ) + '</pre>' ] );\n\n\t\t\ttext += textPart.substr( 0, start ) + name;\n\t\t}\n\n\t\ttext += lastText;\n\t}\n\t// Change multiple <br>s into two line breaks, which will turn into paragraphs.\n\ttext = text.replace( /<br\\s*\\/?>\\s*<br\\s*\\/?>/g, '\\n\\n' );\n\n\tconst allBlocks =\n\t\t'(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';\n\n\t// Add a double line break above block-level opening tags.\n\ttext = text.replace(\n\t\tnew RegExp( '(<' + allBlocks + '[\\\\s/>])', 'g' ),\n\t\t'\\n\\n$1'\n\t);\n\n\t// Add a double line break below block-level closing tags.\n\ttext = text.replace(\n\t\tnew RegExp( '(</' + allBlocks + '>)', 'g' ),\n\t\t'$1\\n\\n'\n\t);\n\n\t// Standardize newline characters to \"\\n\".\n\ttext = text.replace( /\\r\\n|\\r/g, '\\n' );\n\n\t// Find newlines in all elements and add placeholders.\n\ttext = replaceInHtmlTags( text, { '\\n': ' <!-- wpnl --> ' } );\n\n\t// Collapse line breaks before and after <option> elements so they don't get autop'd.\n\tif ( text.indexOf( '<option' ) !== -1 ) {\n\t\ttext = text.replace( /\\s*<option/g, '<option' );\n\t\ttext = text.replace( /<\\/option>\\s*/g, '</option>' );\n\t}\n\n\t/*\n\t * Collapse line breaks inside <object> elements, before <param> and <embed> elements\n\t * so they don't get autop'd.\n\t */\n\tif ( text.indexOf( '</object>' ) !== -1 ) {\n\t\ttext = text.replace( /(<object[^>]*>)\\s*/g, '$1' );\n\t\ttext = text.replace( /\\s*<\\/object>/g, '</object>' );\n\t\ttext = text.replace( /\\s*(<\\/?(?:param|embed)[^>]*>)\\s*/g, '$1' );\n\t}\n\n\t/*\n\t * Collapse line breaks inside <audio> and <video> elements,\n\t * before and after <source> and <track> elements.\n\t */\n\tif ( text.indexOf( '<source' ) !== -1 || text.indexOf( '<track' ) !== -1 ) {\n\t\ttext = text.replace( /([<\\[](?:audio|video)[^>\\]]*[>\\]])\\s*/g, '$1' );\n\t\ttext = text.replace( /\\s*([<\\[]\\/(?:audio|video)[>\\]])/g, '$1' );\n\t\ttext = text.replace( /\\s*(<(?:source|track)[^>]*>)\\s*/g, '$1' );\n\t}\n\n\t// Collapse line breaks before and after <figcaption> elements.\n\tif ( text.indexOf( '<figcaption' ) !== -1 ) {\n\t\ttext = text.replace( /\\s*(<figcaption[^>]*>)/, '$1' );\n\t\ttext = text.replace( /<\\/figcaption>\\s*/, '</figcaption>' );\n\t}\n\n\t// Remove more than two contiguous line breaks.\n\ttext = text.replace( /\\n\\n+/g, '\\n\\n' );\n\n\t// Split up the contents into an array of strings, separated by double line breaks.\n\tconst texts = text.split( /\\n\\s*\\n/ ).filter( Boolean );\n\n\t// Reset text prior to rebuilding.\n\ttext = '';\n\n\t// Rebuild the content as a string, wrapping every bit with a <p>.\n\ttexts.forEach( ( textPiece ) => {\n\t\ttext += '<p>' + textPiece.replace( /^\\n*|\\n*$/g, '' ) + '</p>\\n';\n\t} );\n\n\t// Under certain strange conditions it could create a P of entirely whitespace.\n\ttext = text.replace( /<p>\\s*<\\/p>/g, '' );\n\n\t// Add a closing <p> inside <div>, <address>, or <form> tag if missing.\n\ttext = text.replace(\n\t\t/<p>([^<]+)<\\/(div|address|form)>/g,\n\t\t'<p>$1</p></$2>'\n\t);\n\n\t// If an opening or closing block element tag is wrapped in a <p>, unwrap it.\n\ttext = text.replace(\n\t\tnew RegExp( '<p>\\\\s*(</?' + allBlocks + '[^>]*>)\\\\s*</p>', 'g' ),\n\t\t'$1'\n\t);\n\n\t// In some cases <li> may get wrapped in <p>, fix them.\n\ttext = text.replace( /<p>(<li.+?)<\\/p>/g, '$1' );\n\n\t// If a <blockquote> is wrapped with a <p>, move it inside the <blockquote>.\n\ttext = text.replace( /<p><blockquote([^>]*)>/gi, '<blockquote$1><p>' );\n\ttext = text.replace( /<\\/blockquote><\\/p>/g, '</p></blockquote>' );\n\n\t// If an opening or closing block element tag is preceded by an opening <p> tag, remove it.\n\ttext = text.replace(\n\t\tnew RegExp( '<p>\\\\s*(</?' + allBlocks + '[^>]*>)', 'g' ),\n\t\t'$1'\n\t);\n\n\t// If an opening or closing block element tag is followed by a closing <p> tag, remove it.\n\ttext = text.replace(\n\t\tnew RegExp( '(</?' + allBlocks + '[^>]*>)\\\\s*</p>', 'g' ),\n\t\t'$1'\n\t);\n\n\t// Optionally insert line breaks.\n\tif ( br ) {\n\t\t// Replace newlines that shouldn't be touched with a placeholder.\n\t\ttext = text.replace( /<(script|style).*?<\\/\\\\1>/g, ( match ) =>\n\t\t\tmatch[ 0 ].replace( /\\n/g, '<WPPreserveNewline />' )\n\t\t);\n\n\t\t// Normalize <br>\n\t\ttext = text.replace( /<br>|<br\\/>/g, '<br />' );\n\n\t\t// Replace any new line characters that aren't preceded by a <br /> with a <br />.\n\t\ttext = text.replace( /(<br \\/>)?\\s*\\n/g, ( a, b ) =>\n\t\t\tb ? a : '<br />\\n'\n\t\t);\n\n\t\t// Replace newline placeholders with newlines.\n\t\ttext = text.replace( /<WPPreserveNewline \\/>/g, '\\n' );\n\t}\n\n\t// If a <br /> tag is after an opening or closing block tag, remove it.\n\ttext = text.replace(\n\t\tnew RegExp( '(</?' + allBlocks + '[^>]*>)\\\\s*<br />', 'g' ),\n\t\t'$1'\n\t);\n\n\t// If a <br /> tag is before a subset of opening or closing block tags, remove it.\n\ttext = text.replace(\n\t\t/<br \\/>(\\s*<\\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^>]*>)/g,\n\t\t'$1'\n\t);\n\ttext = text.replace( /\\n<\\/p>$/g, '</p>' );\n\n\t// Replace placeholder <pre> tags with their original content.\n\tpreTags.forEach( ( preTag ) => {\n\t\tconst [ name, original ] = preTag;\n\t\ttext = text.replace( name, original );\n\t} );\n\n\t// Restore newlines in all elements.\n\tif ( -1 !== text.indexOf( '<!-- wpnl -->' ) ) {\n\t\ttext = text.replace( /\\s?<!-- wpnl -->\\s?/g, '\\n' );\n\t}\n\n\treturn text;\n}\n\n/**\n * Replaces `<p>` tags with two line breaks. \"Opposite\" of autop().\n *\n * Replaces `<p>` tags with two line breaks except where the `<p>` has attributes.\n * Unifies whitespace. Indents `<li>`, `<dt>` and `<dd>` for better readability.\n *\n * @param  {string} html The content from the editor.\n *\n * @example\n * ```js\n * import { removep } from '@wordpress/autop';\n * removep( '<p>my text</p>' ); // \"my text\"\n * ```\n *\n * @return {string}      The content with stripped paragraph tags.\n */\nexport function removep( html ) {\n\tconst blocklist =\n\t\t'blockquote|ul|ol|li|dl|dt|dd|table|thead|tbody|tfoot|tr|th|td|h[1-6]|fieldset|figure';\n\tconst blocklist1 = blocklist + '|div|p';\n\tconst blocklist2 = blocklist + '|pre';\n\tconst preserve = [];\n\tlet preserveLinebreaks = false;\n\tlet preserveBr = false;\n\n\tif ( ! html ) {\n\t\treturn '';\n\t}\n\n\t// Protect script and style tags.\n\tif ( html.indexOf( '<script' ) !== -1 || html.indexOf( '<style' ) !== -1 ) {\n\t\thtml = html.replace( /<(script|style)[^>]*>[\\s\\S]*?<\\/\\1>/g, function(\n\t\t\tmatch\n\t\t) {\n\t\t\tpreserve.push( match );\n\t\t\treturn '<wp-preserve>';\n\t\t} );\n\t}\n\n\t// Protect pre tags.\n\tif ( html.indexOf( '<pre' ) !== -1 ) {\n\t\tpreserveLinebreaks = true;\n\t\thtml = html.replace( /<pre[^>]*>[\\s\\S]+?<\\/pre>/g, function( a ) {\n\t\t\ta = a.replace( /<br ?\\/?>(\\r\\n|\\n)?/g, '<wp-line-break>' );\n\t\t\ta = a.replace( /<\\/?p( [^>]*)?>(\\r\\n|\\n)?/g, '<wp-line-break>' );\n\t\t\treturn a.replace( /\\r?\\n/g, '<wp-line-break>' );\n\t\t} );\n\t}\n\n\t// Remove line breaks but keep <br> tags inside image captions.\n\tif ( html.indexOf( '[caption' ) !== -1 ) {\n\t\tpreserveBr = true;\n\t\thtml = html.replace( /\\[caption[\\s\\S]+?\\[\\/caption\\]/g, function( a ) {\n\t\t\treturn a\n\t\t\t\t.replace( /<br([^>]*)>/g, '<wp-temp-br$1>' )\n\t\t\t\t.replace( /[\\r\\n\\t]+/, '' );\n\t\t} );\n\t}\n\n\t// Normalize white space characters before and after block tags.\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*</(' + blocklist1 + ')>\\\\s*', 'g' ),\n\t\t'</$1>\\n'\n\t);\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*<((?:' + blocklist1 + ')(?: [^>]*)?)>', 'g' ),\n\t\t'\\n<$1>'\n\t);\n\n\t// Mark </p> if it has any attributes.\n\thtml = html.replace( /(<p [^>]+>[\\s\\S]*?)<\\/p>/g, '$1</p#>' );\n\n\t// Preserve the first <p> inside a <div>.\n\thtml = html.replace( /<div( [^>]*)?>\\s*<p>/gi, '<div$1>\\n\\n' );\n\n\t// Remove paragraph tags.\n\thtml = html.replace( /\\s*<p>/gi, '' );\n\thtml = html.replace( /\\s*<\\/p>\\s*/gi, '\\n\\n' );\n\n\t// Normalize white space chars and remove multiple line breaks.\n\thtml = html.replace( /\\n[\\s\\u00a0]+\\n/g, '\\n\\n' );\n\n\t// Replace <br> tags with line breaks.\n\thtml = html.replace( /(\\s*)<br ?\\/?>\\s*/gi, function( match, space ) {\n\t\tif ( space && space.indexOf( '\\n' ) !== -1 ) {\n\t\t\treturn '\\n\\n';\n\t\t}\n\n\t\treturn '\\n';\n\t} );\n\n\t// Fix line breaks around <div>.\n\thtml = html.replace( /\\s*<div/g, '\\n<div' );\n\thtml = html.replace( /<\\/div>\\s*/g, '</div>\\n' );\n\n\t// Fix line breaks around caption shortcodes.\n\thtml = html.replace(\n\t\t/\\s*\\[caption([^\\[]+)\\[\\/caption\\]\\s*/gi,\n\t\t'\\n\\n[caption$1[/caption]\\n\\n'\n\t);\n\thtml = html.replace( /caption\\]\\n\\n+\\[caption/g, 'caption]\\n\\n[caption' );\n\n\t// Pad block elements tags with a line break.\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*<((?:' + blocklist2 + ')(?: [^>]*)?)\\\\s*>', 'g' ),\n\t\t'\\n<$1>'\n\t);\n\thtml = html.replace(\n\t\tnew RegExp( '\\\\s*</(' + blocklist2 + ')>\\\\s*', 'g' ),\n\t\t'</$1>\\n'\n\t);\n\n\t// Indent <li>, <dt> and <dd> tags.\n\thtml = html.replace( /<((li|dt|dd)[^>]*)>/g, ' \\t<$1>' );\n\n\t// Fix line breaks around <select> and <option>.\n\tif ( html.indexOf( '<option' ) !== -1 ) {\n\t\thtml = html.replace( /\\s*<option/g, '\\n<option' );\n\t\thtml = html.replace( /\\s*<\\/select>/g, '\\n</select>' );\n\t}\n\n\t// Pad <hr> with two line breaks.\n\tif ( html.indexOf( '<hr' ) !== -1 ) {\n\t\thtml = html.replace( /\\s*<hr( [^>]*)?>\\s*/g, '\\n\\n<hr$1>\\n\\n' );\n\t}\n\n\t// Remove line breaks in <object> tags.\n\tif ( html.indexOf( '<object' ) !== -1 ) {\n\t\thtml = html.replace( /<object[\\s\\S]+?<\\/object>/g, function( a ) {\n\t\t\treturn a.replace( /[\\r\\n]+/g, '' );\n\t\t} );\n\t}\n\n\t// Unmark special paragraph closing tags.\n\thtml = html.replace( /<\\/p#>/g, '</p>\\n' );\n\n\t// Pad remaining <p> tags whit a line break.\n\thtml = html.replace( /\\s*(<p [^>]+>[\\s\\S]*?<\\/p>)/g, '\\n$1' );\n\n\t// Trim.\n\thtml = html.replace( /^\\s+/, '' );\n\thtml = html.replace( /[\\s\\u00a0]+$/, '' );\n\n\tif ( preserveLinebreaks ) {\n\t\thtml = html.replace( /<wp-line-break>/g, '\\n' );\n\t}\n\n\tif ( preserveBr ) {\n\t\thtml = html.replace( /<wp-temp-br([^>]*)>/g, '<br$1>' );\n\t}\n\n\t// Restore preserved tags.\n\tif ( preserve.length ) {\n\t\thtml = html.replace( /<wp-preserve>/g, function() {\n\t\t\treturn preserve.shift();\n\t\t} );\n\t}\n\n\treturn html;\n}\n"],"sourceRoot":""}