{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://wp/@wordpress/rich-text/src/apply-format.js","webpack://wp/@wordpress/rich-text/src/can-indent-list-items.js","webpack://wp/@wordpress/rich-text/src/can-outdent-list-items.js","webpack://wp/@wordpress/rich-text/src/change-list-type.js","webpack://wp/@wordpress/rich-text/src/component/boundary-style.js","webpack://wp/@wordpress/rich-text/src/component/format-edit.js","webpack://wp/@wordpress/rich-text/src/component/index.js","webpack://wp/@wordpress/rich-text/src/component/inline-warning.js","webpack://wp/@wordpress/rich-text/src/component/with-format-types.js","webpack://wp/@wordpress/rich-text/src/concat.js","webpack://wp/@wordpress/rich-text/src/create-element.js","webpack://wp/@wordpress/rich-text/src/create.js","webpack://wp/@wordpress/rich-text/src/get-active-format.js","webpack://wp/@wordpress/rich-text/src/get-active-formats.js","webpack://wp/@wordpress/rich-text/src/get-active-object.js","webpack://wp/@wordpress/rich-text/src/get-format-type.js","webpack://wp/@wordpress/rich-text/src/get-last-child-index.js","webpack://wp/@wordpress/rich-text/src/get-line-index.js","webpack://wp/@wordpress/rich-text/src/get-parent-line-index.js","webpack://wp/@wordpress/rich-text/src/get-text-content.js","webpack://wp/@wordpress/rich-text/src/indent-list-items.js","webpack://wp/@wordpress/rich-text/src/index.js","webpack://wp/@wordpress/rich-text/src/insert-line-separator.js","webpack://wp/@wordpress/rich-text/src/insert-object.js","webpack://wp/@wordpress/rich-text/src/insert.js","webpack://wp/@wordpress/rich-text/src/is-active-list-type.js","webpack://wp/@wordpress/rich-text/src/is-collapsed.js","webpack://wp/@wordpress/rich-text/src/is-empty.js","webpack://wp/@wordpress/rich-text/src/is-format-equal.js","webpack://wp/@wordpress/rich-text/src/is-list-root-selected.js","webpack://wp/@wordpress/rich-text/src/join.js","webpack://wp/@wordpress/rich-text/src/normalise-formats.js","webpack://wp/@wordpress/rich-text/src/outdent-list-items.js","webpack://wp/@wordpress/rich-text/src/register-format-type.js","webpack://wp/@wordpress/rich-text/src/remove-format.js","webpack://wp/@wordpress/rich-text/src/remove-line-separator.js","webpack://wp/@wordpress/rich-text/src/remove.js","webpack://wp/@wordpress/rich-text/src/replace.js","webpack://wp/@wordpress/rich-text/src/slice.js","webpack://wp/@wordpress/rich-text/src/special-characters.js","webpack://wp/@wordpress/rich-text/src/split.js","webpack://wp/@wordpress/rich-text/src/store/actions.js","webpack://wp/@wordpress/rich-text/src/store/index.js","webpack://wp/@wordpress/rich-text/src/store/reducer.js","webpack://wp/@wordpress/rich-text/src/store/selectors.js","webpack://wp/@wordpress/rich-text/src/to-dom.js","webpack://wp/@wordpress/rich-text/src/to-html-string.js","webpack://wp/@wordpress/rich-text/src/to-tree.js","webpack://wp/@wordpress/rich-text/src/toggle-format.js","webpack://wp/@wordpress/rich-text/src/unregister-format-type.js","webpack://wp/@wordpress/rich-text/src/update-formats.js","webpack://wp/./node_modules/classnames/index.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/external {\"this\":[\"wp\",\"compose\"]}","webpack://wp/external {\"this\":[\"wp\",\"data\"]}","webpack://wp/external {\"this\":[\"wp\",\"deprecated\"]}","webpack://wp/external {\"this\":[\"wp\",\"element\"]}","webpack://wp/external {\"this\":[\"wp\",\"escapeHtml\"]}","webpack://wp/external {\"this\":[\"wp\",\"isShallowEqual\"]}","webpack://wp/external {\"this\":[\"wp\",\"keycodes\"]}","webpack://wp/external {\"this\":\"lodash\"}"],"names":["replace","array","index","value","slice","applyFormat","format","startIndex","start","endIndex","end","formats","activeFormats","newFormats","startFormat","find","type","indexOf","position","Infinity","filter","length","splice","normaliseFormats","reject","canIndentListItems","lineIndex","getLineIndex","undefined","replacements","previousLineIndex","formatsAtLineIndex","formatsAtPreviousLineIndex","canOutdentListItems","startingLineIndex","changeListType","newFormat","text","startLineFormats","endLineFormats","getParentLineIndex","newReplacements","startCount","endCount","changed","LINE_SEPARATOR","map","i","globalStyle","document","createElement","boundarySelector","head","appendChild","BoundaryStyle","forwardedRef","useEffect","element","current","querySelector","computedStyle","window","getComputedStyle","newColor","color","selector","rule","style","innerHTML","interactiveContentTags","Set","FormatEdit","formatTypes","onChange","onFocus","allowedFormats","withoutInteractiveFormatting","name","Edit","edit","tagName","has","activeFormat","getActiveFormat","isActive","activeObject","getActiveObject","isObjectActive","attributes","getSelection","INSERTION_INPUT_TYPES_TO_IGNORE","whiteSpace","defaultStyle","EMPTY_ACTIVE_FORMATS","createPrepareEditableTree","props","prefix","fns","Object","keys","reduce","accumulator","key","startsWith","push","fn","fixPlaceholderSelection","selection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","RichText","selectionStart","selectionEnd","arguments","bind","onBlur","handleDelete","handleEnter","handleSpace","handleHorizontalNavigation","onPaste","onCreateUndoLevel","onInput","onCompositionStart","onCompositionEnd","onSelectionChange","createRecord","applyRecord","valueToFormat","onPointerDown","formatToValue","Editable","onKeyDown","event","defaultPrevented","state","lastHistoryValue","record","removeEventListener","cancelAnimationFrame","rafId","domOnly","multilineTag","__unstableMultilineTag","preserveWhiteSpace","range","rangeCount","getRangeAt","create","multilineWrapperTags","__unstableIsEditableTree","apply","prepareEditableTree","__unstableDomOnly","placeholder","isSelected","__unstableIsSelected","preventDefault","clipboardData","items","files","isNil","plainText","html","getData","error1","error2","console","log","transformed","accumlator","__unstablePasteRule","Array","from","forEach","item","getAsFile","file","size","removeEditorOnlyFormats","unstableOnFocus","setState","getActiveFormats","requestAnimationFrame","addEventListener","setFocusedElement","deprecated","alternative","instanceId","isComposing","inputType","nativeEvent","change","updateFormats","withoutHistory","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","allowPrefixTransformations","__unstableAllowPrefixTransformations","setTimeout","clearTimeout","timeout","disabled","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","newValue","changeHandlers","pickBy","v","values","changeHandler","__unstableOnCreateUndoLevel","keyCode","DELETE","BACKSPACE","ESCAPE","__unstableDidAutomaticChange","__unstableUndo","onDelete","isReverse","remove","isEmptyLine","removeLineSeparator","isCollapsed","ENTER","onEnter","shiftKey","altKey","metaKey","ctrlKey","SPACE","characterBefore","indentListItems","LEFT","RIGHT","collapsed","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","newPos","target","textContent","parentNode","ownerDocument","createRange","setStart","setEnd","removeAllRanges","addRange","prevProps","shouldReapply","selectionChanged","predicate","prepareProps","prevPrepareProps","isShallowEqual","prepare","formatType","__experimentalCreatePrepareEditableTree","removeFormat","toHTMLString","TagName","className","ariaProps","classnames","children","focus","Component","defaultProps","RichTextWrapper","compose","withSafeTimeout","withFormatTypes","forwardRef","ref","InlineWarning","process","display","warn","formatTypesSelector","select","getFormatTypes","WithFormatTypes","clientId","identifier","useSelect","selectProps","acc","settings","__experimentalGetPropsForEditableTreePreparation","selectPrefix","mapKeys","richTextIdentifier","blockClientId","dispatchProps","__unstableUseDispatchWithMap","dispatch","__experimentalGetPropsForEditableTreeChangeHandler","dispatchPrefix","newProps","useMemo","args","combined","propsByPrefix","__experimentalCreateOnChangeEditableValue","mergePair","a","b","concat","implementation","body","createHTMLDocument","Node","TEXT_NODE","createEmptyValue","simpleFindKey","object","toFormat","class","getFormatTypeForClassName","trim","getFormatTypeForBareElement","registeredAttributes","unregisteredAttributes","isEditableTree","createFromElement","createFromMultilineElement","accumulateSelection","node","startContainer","startOffset","endContainer","endOffset","currentLength","filterRange","nodeValue","collapseWhiteSpace","string","ZWNBSPRegExp","RegExp","ZWNBSP","removePadding","currentWrapperTags","hasChildNodes","nodeName","toLowerCase","lastFormats","lastFormat","getAttributes","isFormatEqual","OBJECT_REPLACEMENT_CHARACTER","mergeFormats","hasAttributes","getFormatType","getLastChildIndex","lineFormats","childIndex","formatsAtIndex","startFormats","getTextContent","getTargetLevelLineIndex","rootFormat","targetLevelLineIndex","targetFormats","lastformat","insertLineSeparator","beforeText","previousLineSeparatorIndex","lastIndexOf","previousLineSeparatorFormats","valueToInsert","insert","insertObject","formatToInsert","isActiveListType","rootType","replacement","isEmpty","format1","format2","attributes1","attributes2","keys1","keys2","isListRootSelected","join","separator","formatsAtPreviousIndex","newFormatsAtIndex","formatIndex","previousFormat","outdentListItems","parentFormats","endingLineIndex","lastChildIndex","currentFormats","registerFormatType","error","test","formatTypeForBareElement","formatTypeForClassName","title","keywords","addFormatTypes","filterFormats","backward","removeStart","removeEnd","pattern","match","rest","offset","newText","fill","split","splitAtSelection","nextStart","substring","before","after","castArray","removeFormatTypes","names","registerStore","reducer","selectors","actions","action","keyBy","omit","combineReducers","createSelector","bareElementTagName","elementClassName","createPathToNode","rootNode","path","previousSibling","getNodeByPath","shift","createEmpty","append","child","createTextNode","setAttribute","appendText","appendData","getLastChild","lastChild","getParent","isText","getText","removeChild","toDom","startPath","endPath","tree","toTree","onStartIndex","pointer","onEndIndex","applyValue","applySelection","future","futureChild","firstChild","currentChild","isEqualNode","data","replaceChild","currentAttributes","futureAttributes","ii","removeAttribute","isRangeEqual","activeElement","HTMLElement","createChildrenHTML","parent","createElementHTML","attributeString","isValidAttributeName","escapeAttribute","escapeEditableHTML","fromFormat","boundaryClass","elementAttributes","isEqualUntil","formatsLength","multilineFormat","deepestActiveFormat","lastSeparatorFormats","lastCharacterFormats","lastCharacter","character","charAt","shouldInsertPadding","characterFormats","newNode","contenteditable","toggleFormat","unregisterFormatType","oldFormat"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAe;AACf;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAkD;AACnC;AACf,iCAAiC,iEAAgB;AACjD,C;;;;;;;;;;;;ACHA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;ACdA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAe;AACf;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AChBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAAA;AAA8C;AAC/B;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,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CA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,KAA6B;AAClC;AACA;AACA,EAAE,UAAU,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,oGAAC;AACJ,EAAE,MAAM,EAEN;AACF,CAAC;;;;;;;;;;;;;ACnDD;AAAa;;AAEb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACjRD,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,qCAAqC,EAAE,I;;;;;;;;;;;ACApD,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,+CAA+C,EAAE,I;;;;;;;;;;;ACA9D,aAAa,yCAAyC,EAAE,I;;;;;;;;;;;ACAxD,aAAa,iCAAiC,EAAE,I","file":"rich-text.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/@wordpress/rich-text/build-module/index.js\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * External dependencies\n */\n\nimport { find, reject } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\nfunction replace( array, index, value ) {\n\tarray = array.slice();\n\tarray[ index ] = value;\n\treturn array;\n}\n\n/**\n * Apply a format object to a Rich Text value from the given `startIndex` to the\n * given `endIndex`. Indices are retrieved from the selection if none are\n * provided.\n *\n * @param {Object} value        Value to modify.\n * @param {Object} format       Format to apply.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the format applied.\n */\nexport function applyFormat(\n\tvalue,\n\tformat,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// The selection is collapsed.\n\tif ( startIndex === endIndex ) {\n\t\tconst startFormat = find( newFormats[ startIndex ], {\n\t\t\ttype: format.type,\n\t\t} );\n\n\t\t// If the caret is at a format of the same type, expand start and end to\n\t\t// the edges of the format. This is useful to apply new attributes.\n\t\tif ( startFormat ) {\n\t\t\tconst index = newFormats[ startIndex ].indexOf( startFormat );\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ] &&\n\t\t\t\tnewFormats[ startIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ startIndex ] = replace(\n\t\t\t\t\tnewFormats[ startIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ] &&\n\t\t\t\tnewFormats[ endIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ endIndex ] = replace(\n\t\t\t\t\tnewFormats[ endIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Determine the highest position the new format can be inserted at.\n\t\tlet position = +Infinity;\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tif ( newFormats[ index ] ) {\n\t\t\t\tnewFormats[ index ] = newFormats[ index ].filter(\n\t\t\t\t\t( { type } ) => type !== format.type\n\t\t\t\t);\n\n\t\t\t\tconst length = newFormats[ index ].length;\n\n\t\t\t\tif ( length < position ) {\n\t\t\t\t\tposition = length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewFormats[ index ] = [];\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tnewFormats[ index ].splice( position, 0, format );\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\t// Always revise active formats. This serves as a placeholder for new\n\t\t// inputs with the format so new input appears with the format applied,\n\t\t// and ensures a format of the same type uses the latest values.\n\t\tactiveFormats: [\n\t\t\t...reject( activeFormats, { type: format.type } ),\n\t\t\tformat,\n\t\t],\n\t} );\n}\n","/**\n * Internal dependencies\n */\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Checks if the selected list item can be indented.\n *\n * @param {Object} value Value to check.\n *\n * @return {boolean} Whether or not the selected list item can be indented.\n */\nexport function canIndentListItems( value ) {\n\tconst lineIndex = getLineIndex( value );\n\n\t// There is only one line, so the line cannot be indented.\n\tif ( lineIndex === undefined ) {\n\t\treturn false;\n\t}\n\n\tconst { replacements } = value;\n\tconst previousLineIndex = getLineIndex( value, lineIndex );\n\tconst formatsAtLineIndex = replacements[ lineIndex ] || [];\n\tconst formatsAtPreviousLineIndex = replacements[ previousLineIndex ] || [];\n\n\t// If the indentation of the current line is greater than previous line,\n\t// then the line cannot be furter indented.\n\treturn formatsAtLineIndex.length <= formatsAtPreviousLineIndex.length;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Checks if the selected list item can be outdented.\n *\n * @param {Object} value Value to check.\n *\n * @return {boolean} Whether or not the selected list item can be outdented.\n */\nexport function canOutdentListItems( value ) {\n\tconst { replacements, start } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\treturn replacements[ startingLineIndex ] !== undefined;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { getParentLineIndex } from './get-parent-line-index';\n\n/**\n * Changes the list type of the selected indented list, if any. Looks at the\n * currently selected list item and takes the parent list, then changes the list\n * type of this list. When multiple lines are selected, the parent lists are\n * takes and changed.\n *\n * @param {Object} value     Value to change.\n * @param {Object} newFormat The new list format object. Choose between\n *                           `{ type: 'ol' }` and `{ type: 'ul' }`.\n *\n * @return {Object} The changed value.\n */\nexport function changeListType( value, newFormat ) {\n\tconst { text, replacements, start, end } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\tconst startLineFormats = replacements[ startingLineIndex ] || [];\n\tconst endLineFormats = replacements[ getLineIndex( value, end ) ] || [];\n\tconst startIndex = getParentLineIndex( value, startingLineIndex );\n\tconst newReplacements = replacements.slice();\n\tconst startCount = startLineFormats.length - 1;\n\tconst endCount = endLineFormats.length - 1;\n\n\tlet changed;\n\n\tfor ( let index = startIndex + 1 || 0; index < text.length; index++ ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( ( newReplacements[ index ] || [] ).length <= startCount ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif ( ! newReplacements[ index ] ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchanged = true;\n\t\tnewReplacements[ index ] = newReplacements[ index ].map(\n\t\t\t( format, i ) => {\n\t\t\t\treturn i < startCount || i > endCount ? format : newFormat;\n\t\t\t}\n\t\t);\n\t}\n\n\tif ( ! changed ) {\n\t\treturn value;\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newReplacements,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Global stylesheet shared by all RichText instances.\n */\nconst globalStyle = document.createElement( 'style' );\n\nconst boundarySelector = '*[data-rich-text-format-boundary]';\n\ndocument.head.appendChild( globalStyle );\n\n/**\n * Calculates and renders the format boundary style when the active formats\n * change.\n */\nexport function BoundaryStyle( { activeFormats, forwardedRef } ) {\n\tuseEffect( () => {\n\t\t// There's no need to recalculate the boundary styles if no formats are\n\t\t// active, because no boundary styles will be visible.\n\t\tif ( ! activeFormats || ! activeFormats.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = forwardedRef.current.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computedStyle = window.getComputedStyle( element );\n\t\tconst newColor = computedStyle.color\n\t\t\t.replace( ')', ', 0.2)' )\n\t\t\t.replace( 'rgb', 'rgba' );\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\t\tconst style = `${ selector } {${ rule }}`;\n\n\t\tif ( globalStyle.innerHTML !== style ) {\n\t\t\tglobalStyle.innerHTML = style;\n\t\t}\n\t}, [ activeFormats ] );\n\treturn null;\n}\n","/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\nimport { getActiveObject } from '../get-active-object';\n\n/**\n * Set of all interactive content tags.\n *\n * @see https://html.spec.whatwg.org/multipage/dom.html#interactive-content\n */\nconst interactiveContentTags = new Set( [\n\t'a',\n\t'audio',\n\t'button',\n\t'details',\n\t'embed',\n\t'iframe',\n\t'input',\n\t'label',\n\t'select',\n\t'textarea',\n\t'video',\n] );\n\nexport default function FormatEdit( {\n\tformatTypes,\n\tonChange,\n\tonFocus,\n\tvalue,\n\tallowedFormats,\n\twithoutInteractiveFormatting,\n} ) {\n\treturn formatTypes.map( ( { name, edit: Edit, tagName } ) => {\n\t\tif ( ! Edit ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( allowedFormats && allowedFormats.indexOf( name ) === -1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\twithoutInteractiveFormatting &&\n\t\t\tinteractiveContentTags.has( tagName )\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activeFormat = getActiveFormat( value, name );\n\t\tconst isActive = activeFormat !== undefined;\n\t\tconst activeObject = getActiveObject( value );\n\t\tconst isObjectActive =\n\t\t\tactiveObject !== undefined && activeObject.type === name;\n\n\t\treturn (\n\t\t\t<Edit\n\t\t\t\tkey={ name }\n\t\t\t\tisActive={ isActive }\n\t\t\t\tactiveAttributes={\n\t\t\t\t\tisActive ? activeFormat.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tisObjectActive={ isObjectActive }\n\t\t\t\tactiveObjectAttributes={\n\t\t\t\t\tisObjectActive ? activeObject.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\tonFocus={ onFocus }\n\t\t\t/>\n\t\t);\n\t} );\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { find, isNil, pickBy, startsWith } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, forwardRef } from '@wordpress/element';\nimport {\n\tBACKSPACE,\n\tDELETE,\n\tENTER,\n\tLEFT,\n\tRIGHT,\n\tSPACE,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport { withSafeTimeout, compose } from '@wordpress/compose';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\nimport withFormatTypes from './with-format-types';\nimport { BoundaryStyle } from './boundary-style';\nimport { InlineWarning } from './inline-warning';\n\n/**\n * Browser dependencies\n */\n\nconst { getSelection, getComputedStyle } = window;\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * Default style object for the editable element.\n *\n * @type {Object<string,string>}\n */\nconst defaultStyle = { whiteSpace };\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nfunction createPrepareEditableTree( props, prefix ) {\n\tconst fns = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\tif ( key.startsWith( prefix ) ) {\n\t\t\taccumulator.push( props[ key ] );\n\t\t}\n\n\t\treturn accumulator;\n\t}, [] );\n\n\treturn ( value ) =>\n\t\tfns.reduce( ( accumulator, fn ) => {\n\t\t\treturn fn( accumulator, value.text );\n\t\t}, value.formats );\n}\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n */\nfunction fixPlaceholderSelection() {\n\tconst selection = window.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\n/**\n * See export statement below.\n */\nclass RichText extends Component {\n\tconstructor( { value, selectionStart, selectionEnd } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.handleDelete = this.handleDelete.bind( this );\n\t\tthis.handleEnter = this.handleEnter.bind( this );\n\t\tthis.handleSpace = this.handleSpace.bind( this );\n\t\tthis.handleHorizontalNavigation = this.handleHorizontalNavigation.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onCreateUndoLevel = this.onCreateUndoLevel.bind( this );\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onCompositionStart = this.onCompositionStart.bind( this );\n\t\tthis.onCompositionEnd = this.onCompositionEnd.bind( this );\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.applyRecord = this.applyRecord.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.formatToValue = this.formatToValue.bind( this );\n\t\tthis.Editable = this.Editable.bind( this );\n\n\t\tthis.onKeyDown = ( event ) => {\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.handleDelete( event );\n\t\t\tthis.handleEnter( event );\n\t\t\tthis.handleSpace( event );\n\t\t\tthis.handleHorizontalNavigation( event );\n\t\t};\n\n\t\tthis.state = {};\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values are updated synchronously, unlike props and state.\n\t\tthis.value = value;\n\t\tthis.record = this.formatToValue( value );\n\t\tthis.record.start = selectionStart;\n\t\tthis.record.end = selectionEnd;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t\twindow.cancelAnimationFrame( this.rafId );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.applyRecord( this.record, { domOnly: true } );\n\t}\n\n\tcreateRecord() {\n\t\tconst {\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tforwardedRef,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\t\tconst selection = getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: forwardedRef.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tapplyRecord( record, { domOnly } = {} ) {\n\t\tconst {\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tforwardedRef,\n\t\t} = this.props;\n\n\t\tapply( {\n\t\t\tvalue: record,\n\t\t\tcurrent: forwardedRef.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree(\n\t\t\t\tthis.props,\n\t\t\t\t'format_prepare_functions'\n\t\t\t),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {ClipboardEvent} event The paste event.\n\t */\n\tonPaste( event ) {\n\t\tconst {\n\t\t\tformatTypes,\n\t\t\tonPaste,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\n\t\tif ( ! isSelected ) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst record = this.record;\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstablePasteRule } ) => {\n\t\t\t\t// Only allow one transform.\n\t\t\t\tif ( __unstablePasteRule && accumlator === record ) {\n\t\t\t\t\taccumlator = __unstablePasteRule( record, {\n\t\t\t\t\t\thtml,\n\t\t\t\t\t\tplainText,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\trecord\n\t\t);\n\n\t\tif ( transformed !== record ) {\n\t\t\tthis.onChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\tfiles = Array.from( files );\n\n\t\t\tArray.from( items ).forEach( ( item ) => {\n\t\t\t\tif ( ! item.getAsFile ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst file = item.getAsFile();\n\n\t\t\t\tif ( ! file ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { name, type, size } = file;\n\n\t\t\t\tif ( ! find( files, { name, type, size } ) ) {\n\t\t\t\t\tfiles.push( file );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: this.removeEditorOnlyFormats( record ),\n\t\t\t\tonChange: this.onChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\tfiles,\n\t\t\t\tactiveFormats,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tonFocus() {\n\t\tconst { unstableOnFocus } = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\tif ( ! this.props.__unstableIsSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t\t// will be recalculated on the next mouseup, keyup, or touchend event.\n\t\t\tconst index = undefined;\n\t\t\tconst activeFormats = EMPTY_ACTIVE_FORMATS;\n\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats,\n\t\t\t};\n\t\t\tthis.props.onSelectionChange( index, index );\n\t\t\tthis.setState( { activeFormats } );\n\t\t} else {\n\t\t\tthis.props.onSelectionChange( this.record.start, this.record.end );\n\t\t\tthis.setState( {\n\t\t\t\tactiveFormats: getActiveFormats(\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.record,\n\t\t\t\t\t\tactiveFormats: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\tthis.rafId = window.requestAnimationFrame( this.onSelectionChange );\n\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\n\t\tif ( this.props.setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tthis.props.setFocusedElement( this.props.instanceId );\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tdocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic input event.\n\t */\n\tonInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed.\n\t\t// As of December 2019, Safari doesn't support nativeEvent.isComposing.\n\t\tif ( this.isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tif ( ! inputType && event && event.nativeEvent ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tthis.applyRecord( this.record );\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\t\tconst { start, activeFormats = [] } = this.record;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue,\n\t\t\tstart,\n\t\t\tend: value.start,\n\t\t\tformats: activeFormats,\n\t\t} );\n\n\t\tthis.onChange( change, { withoutHistory: true } );\n\n\t\tconst {\n\t\t\t__unstableInputRule: inputRule,\n\t\t\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t\t\t__unstableAllowPrefixTransformations: allowPrefixTransformations,\n\t\t\tformatTypes,\n\t\t\tsetTimeout,\n\t\t\tclearTimeout,\n\t\t} = this.props;\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tclearTimeout( this.onInput.timeout );\n\t\tthis.onInput.timeout = setTimeout( this.onCreateUndoLevel, 1000 );\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( allowPrefixTransformations && inputRule ) {\n\t\t\tinputRule( change, this.valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstableInputRule } ) => {\n\t\t\t\tif ( __unstableInputRule ) {\n\t\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\tchange\n\t\t);\n\n\t\tif ( transformed !== change ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t\tthis.onChange( { ...transformed, activeFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tonCompositionStart() {\n\t\tthis.isComposing = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might distroy internal browser\n\t\t// editing state.\n\t\tdocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\tonCompositionEnd() {\n\t\tthis.isComposing = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tthis.onInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|WPSyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tonSelectionChange( event ) {\n\t\tif (\n\t\t\tevent.type !== 'selectionchange' &&\n\t\t\t! this.props.__unstableIsSelected\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( this.isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = this.createRecord();\n\t\tconst value = this.record;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== value.text ) {\n\t\t\tthis.onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === value.start && end === value.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( value.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t\t\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t\t\t__unstableOnExitFormattedText: onExitFormattedText,\n\t\t} = this.props;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst activeFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = activeFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && activeFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! activeFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue, { domOnly: true } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  record            The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tonChange( record, { withoutHistory } = {} ) {\n\t\tthis.applyRecord( record );\n\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.record = record;\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.props.onChange( this.value );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t}\n\t}\n\n\tonCreateUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.__unstableOnCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif (\n\t\t\tkeyCode !== DELETE &&\n\t\t\tkeyCode !== BACKSPACE &&\n\t\t\tkeyCode !== ESCAPE\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.__unstableDidAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.__unstableUndo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { onDelete, __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end, text } = value;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\tthis.onChange( remove( value ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tlet newValue;\n\n\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tvalue.start === 0 &&\n\t\t\t\tvalue.end === 0 &&\n\t\t\t\tisEmptyLine( value )\n\t\t\t) {\n\t\t\t\tnewValue = removeLineSeparator( value, ! isReverse );\n\t\t\t} else {\n\t\t\t\tnewValue = removeLineSeparator( value, isReverse );\n\t\t\t}\n\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( value ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst { onEnter } = this.props;\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: this.removeEditorOnlyFormats( this.createRecord() ),\n\t\t\tonChange: this.onChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleSpace( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\t\tconst { tagName, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tif (\n\t\t\t// Only override when no modifiers are pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\tkeyCode !== SPACE ||\n\t\t\tmultilineTag !== 'li'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\n\t\tif ( ! isCollapsed( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = value;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChange( indentListItems( value, { type: tagName } ) );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.record;\n\t\tconst { text, formats, start, end, activeFormats = [] } = value;\n\t\tconst collapsed = isCollapsed( value );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = getComputedStyle(\n\t\t\tthis.props.forwardedRef.current\n\t\t);\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && activeFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\tlet newActiveFormatsLength = activeFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length < formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length > formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length > formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length < formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\tif ( newActiveFormatsLength !== activeFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = { ...value, activeFormats: newActiveFormats };\n\t\t\tthis.record = newValue;\n\t\t\tthis.applyRecord( newValue );\n\t\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue );\n\t\tthis.props.onSelectionChange( newPos, newPos );\n\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tonPointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif (\n\t\t\ttarget === this.props.forwardedRef.current ||\n\t\t\ttarget.textContent\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = target.ownerDocument.createRange();\n\t\tconst selection = getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tvalue,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tplaceholder,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\n\t\t// Check if tag name changed.\n\t\tlet shouldReapply = tagName !== prevProps.tagName;\n\n\t\t// Check if the content changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply ||\n\t\t\t( value !== prevProps.value && value !== this.value );\n\n\t\tconst selectionChanged =\n\t\t\t( selectionStart !== prevProps.selectionStart &&\n\t\t\t\tselectionStart !== this.record.start ) ||\n\t\t\t( selectionEnd !== prevProps.selectionEnd &&\n\t\t\t\tselectionEnd !== this.record.end );\n\n\t\t// Check if the selection changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply ||\n\t\t\t( isSelected && ! prevProps.isSelected && selectionChanged );\n\n\t\tconst prefix = 'format_prepare_props_';\n\t\tconst predicate = ( v, key ) => key.startsWith( prefix );\n\t\tconst prepareProps = pickBy( this.props, predicate );\n\t\tconst prevPrepareProps = pickBy( prevProps, predicate );\n\n\t\t// Check if any format props changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply || ! isShallowEqual( prepareProps, prevPrepareProps );\n\n\t\t// Rerender if the placeholder changed.\n\t\tshouldReapply = shouldReapply || placeholder !== prevProps.placeholder;\n\n\t\tif ( shouldReapply ) {\n\t\t\tthis.value = value;\n\t\t\tthis.record = this.formatToValue( value );\n\t\t\tthis.record.start = selectionStart;\n\t\t\tthis.record.end = selectionEnd;\n\t\t\tthis.applyRecord( this.record );\n\t\t} else if ( selectionChanged ) {\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} value The outside value, data type depends on props.\n\t * @return {Object} An internal rich-text value.\n\t */\n\tformatToValue( value ) {\n\t\tconst {\n\t\t\tformat,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree(\n\t\t\tthis.props,\n\t\t\t'format_value_functions'\n\t\t);\n\n\t\tvalue = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tvalue.formats = prepare( value );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {Object} A new rich-text value.\n\t */\n\tremoveEditorOnlyFormats( value ) {\n\t\tthis.props.formatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tvalue = removeFormat(\n\t\t\t\t\tvalue,\n\t\t\t\t\tformatType.name,\n\t\t\t\t\t0,\n\t\t\t\t\tvalue.text.length\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tvalueToFormat( value ) {\n\t\tconst {\n\t\t\tformat,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\n\t\tvalue = this.removeEditorOnlyFormats( value );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value, multilineTag, preserveWhiteSpace } );\n\t}\n\n\tEditable( props ) {\n\t\tconst {\n\t\t\ttagName: TagName = 'div',\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tplaceholder,\n\t\t\tforwardedRef,\n\t\t\tdisabled,\n\t\t} = this.props;\n\t\tconst ariaProps = pickBy( this.props, ( value, key ) =>\n\t\t\tstartsWith( key, 'aria-' )\n\t\t);\n\n\t\treturn (\n\t\t\t<TagName\n\t\t\t\t// Overridable props.\n\t\t\t\trole=\"textbox\"\n\t\t\t\taria-multiline\n\t\t\t\taria-label={ placeholder }\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...ariaProps }\n\t\t\t\tref={ forwardedRef }\n\t\t\t\tstyle={ style ? { ...style, whiteSpace } : defaultStyle }\n\t\t\t\tclassName={ classnames( 'rich-text', className ) }\n\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\tonInput={ this.onInput }\n\t\t\t\tonCompositionStart={ this.onCompositionStart }\n\t\t\t\tonCompositionEnd={ this.onCompositionEnd }\n\t\t\t\tonKeyDown={\n\t\t\t\t\tprops.onKeyDown\n\t\t\t\t\t\t? ( event ) => {\n\t\t\t\t\t\t\t\tprops.onKeyDown( event );\n\t\t\t\t\t\t\t\tthis.onKeyDown( event );\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: this.onKeyDown\n\t\t\t\t}\n\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\tonTouchStart={ this.onPointerDown }\n\t\t\t\t// Selection updates must be done at these events as they\n\t\t\t\t// happen before the `selectionchange` event. In some cases,\n\t\t\t\t// the `selectionchange` event may not even fire, for\n\t\t\t\t// example when the window receives focus again on click.\n\t\t\t\tonKeyUp={ this.onSelectionChange }\n\t\t\t\tonMouseUp={ this.onSelectionChange }\n\t\t\t\tonTouchEnd={ this.onSelectionChange }\n\t\t\t\t// Do not set the attribute if disabled.\n\t\t\t\tcontentEditable={ disabled ? undefined : true }\n\t\t\t\tsuppressContentEditableWarning={ ! disabled }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t\tallowedFormats,\n\t\t\twithoutInteractiveFormatting,\n\t\t\tformatTypes,\n\t\t\tforwardedRef,\n\t\t} = this.props;\n\t\tconst { activeFormats } = this.state;\n\n\t\tconst onFocus = () => {\n\t\t\tforwardedRef.current.focus();\n\t\t\tthis.applyRecord( this.record );\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BoundaryStyle\n\t\t\t\t\tactiveFormats={ activeFormats }\n\t\t\t\t\tforwardedRef={ forwardedRef }\n\t\t\t\t/>\n\t\t\t\t<InlineWarning forwardedRef={ forwardedRef } />\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<FormatEdit\n\t\t\t\t\t\tallowedFormats={ allowedFormats }\n\t\t\t\t\t\twithoutInteractiveFormatting={\n\t\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ this.record }\n\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\tformatTypes={ formatTypes }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ children &&\n\t\t\t\t\tchildren( {\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tvalue: this.record,\n\t\t\t\t\t\tonChange: this.onChange,\n\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\tEditable: this.Editable,\n\t\t\t\t\t} ) }\n\t\t\t\t{ ! children && <this.Editable /> }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\nconst RichTextWrapper = compose( [ withSafeTimeout, withFormatTypes ] )(\n\tRichText\n);\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default forwardRef( ( props, ref ) => {\n\treturn <RichTextWrapper { ...props } forwardedRef={ ref } />;\n} );\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\nexport function InlineWarning( { forwardedRef } ) {\n\tuseEffect( () => {\n\t\tif ( process.env.NODE_ENV === 'development' ) {\n\t\t\tconst computedStyle = window.getComputedStyle(\n\t\t\t\tforwardedRef.current\n\t\t\t);\n\n\t\t\tif ( computedStyle.display === 'inline' ) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'RichText cannot be used with an inline container. Please use a different tagName.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}, [] );\n\treturn null;\n}\n","/**\n * External dependencies\n */\nimport { mapKeys } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect, __unstableUseDispatchWithMap } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\nfunction formatTypesSelector( select ) {\n\treturn select( 'core/rich-text' ).getFormatTypes();\n}\n\n/**\n * This higher-order component provides RichText with the `formatTypes` prop\n * and its derived props from experimental format type settings.\n *\n * @param {WPComponent} RichText The rich text component to add props for.\n *\n * @return {WPComponent} New enhanced component.\n */\nexport default function withFormatTypes( RichText ) {\n\treturn function WithFormatTypes( props ) {\n\t\tconst { clientId, identifier } = props;\n\t\tconst formatTypes = useSelect( formatTypesSelector, [] );\n\t\tconst selectProps = useSelect(\n\t\t\t( select ) => {\n\t\t\t\treturn formatTypes.reduce( ( acc, settings ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! settings.__experimentalGetPropsForEditableTreePreparation\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst selectPrefix = `format_prepare_props_(${ settings.name })_`;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t...mapKeys(\n\t\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreePreparation(\n\t\t\t\t\t\t\t\tselect,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t( value, key ) => selectPrefix + key\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}, {} );\n\t\t\t},\n\t\t\t[ formatTypes, clientId, identifier ]\n\t\t);\n\t\tconst dispatchProps = __unstableUseDispatchWithMap(\n\t\t\t( dispatch ) => {\n\t\t\t\treturn formatTypes.reduce( ( acc, settings ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! settings.__experimentalGetPropsForEditableTreeChangeHandler\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst dispatchPrefix = `format_on_change_props_(${ settings.name })_`;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t...mapKeys(\n\t\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreeChangeHandler(\n\t\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t( value, key ) => dispatchPrefix + key\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}, {} );\n\t\t\t},\n\t\t\t[ formatTypes, clientId, identifier ]\n\t\t);\n\t\tconst newProps = useMemo( () => {\n\t\t\treturn formatTypes.reduce( ( acc, settings ) => {\n\t\t\t\tif ( ! settings.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\tconst args = {\n\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t};\n\t\t\t\tconst combined = {\n\t\t\t\t\t...selectProps,\n\t\t\t\t\t...dispatchProps,\n\t\t\t\t};\n\n\t\t\t\tconst { name } = settings;\n\t\t\t\tconst selectPrefix = `format_prepare_props_(${ name })_`;\n\t\t\t\tconst dispatchPrefix = `format_on_change_props_(${ name })_`;\n\t\t\t\tconst propsByPrefix = Object.keys( combined ).reduce(\n\t\t\t\t\t( accumulator, key ) => {\n\t\t\t\t\t\tif ( key.startsWith( selectPrefix ) ) {\n\t\t\t\t\t\t\taccumulator[ key.slice( selectPrefix.length ) ] =\n\t\t\t\t\t\t\t\tcombined[ key ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( key.startsWith( dispatchPrefix ) ) {\n\t\t\t\t\t\t\taccumulator[ key.slice( dispatchPrefix.length ) ] =\n\t\t\t\t\t\t\t\tcombined[ key ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t);\n\n\t\t\t\tif ( settings.__experimentalCreateOnChangeEditableValue ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t[ `format_value_functions_(${ name })` ]: settings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t),\n\t\t\t\t\t\t[ `format_on_change_functions_(${ name })` ]: settings.__experimentalCreateOnChangeEditableValue(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...acc,\n\t\t\t\t\t[ `format_prepare_functions_(${ name })` ]: settings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\targs\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}, {} );\n\t\t}, [ formatTypes, clientId, identifier, selectProps, dispatchProps ] );\n\n\t\treturn (\n\t\t\t<RichText\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...selectProps }\n\t\t\t\t{ ...newProps }\n\t\t\t\tformatTypes={ formatTypes }\n\t\t\t/>\n\t\t);\n\t};\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param  {Object} a Value to mutate.\n * @param  {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...Object} values Objects to combine.\n *\n * @return {Object} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n","/**\n * Parse the given HTML into a body element.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createElement`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @param {HTMLDocument} document The HTML document to use to parse.\n * @param {string}       html     The HTML to parse.\n *\n * @return {HTMLBodyElement} Body element with parsed HTML.\n */\nexport function createElement( { implementation }, html ) {\n\t// Because `createHTMLDocument` is an expensive operation, and with this\n\t// function being internal to `rich-text` (full control in avoiding a risk\n\t// of asynchronous operations on the shared reference), a single document\n\t// is reused and reset for each call to the function.\n\tif ( ! createElement.body ) {\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\n\t}\n\n\tcreateElement.body.innerHTML = html;\n\n\treturn createElement.body;\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\n/**\n * Browser dependencies\n */\n\nconst { TEXT_NODE, ELEMENT_NODE } = window.Node;\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction simpleFindKey( object, value ) {\n\tfor ( const key in object ) {\n\t\tif ( object[ key ] === value ) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nfunction toFormat( { type, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( 'core/rich-text' ).getFormatTypeForClassName(\n\t\t\tattributes.class\n\t\t);\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `\n\t\t\t\t.replace( ` ${ formatType.className } `, ' ' )\n\t\t\t\t.trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType = select( 'core/rich-text' ).getFormatTypeForBareElement(\n\t\t\ttype\n\t\t);\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type, attributes } : { type };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { type: formatType.name };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\n\tfor ( const name in attributes ) {\n\t\tconst key = simpleFindKey( formatType.attributes, name );\n\n\t\tif ( key ) {\n\t\t\tregisteredAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: formatType.name,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. If\n * `multilineTag` is provided, any content of direct children whose type matches\n * `multilineTag` will be separated by two newlines. The optional functions can\n * be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                      Optional named arguments.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {string}  [$1.text]                 Text to create value from.\n * @param {string}  [$1.html]                 HTML to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n * @param {?boolean} [$1.preserveWhiteSpace]  Whether or not to collapse white\n *                                            space characters.\n *\n * @return {Object} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\t__unstableIsEditableTree: isEditableTree,\n\tpreserveWhiteSpace,\n} = {} ) {\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\tif ( ! multilineTag ) {\n\t\treturn createFromElement( {\n\t\t\telement,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\treturn createFromMultilineElement( {\n\t\telement,\n\t\trange,\n\t\tmultilineTag,\n\t\tmultilineWrapperTags,\n\t\tisEditableTree,\n\t\tpreserveWhiteSpace,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {?Object} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\n/**\n * Collapse any whitespace used for HTML formatting to one space character,\n * because it will also be displayed as such by the browser.\n *\n * @param {string} string\n */\nfunction collapseWhiteSpace( string ) {\n\treturn string.replace( /[\\n\\r\\t]+/g, ' ' );\n}\n\nconst ZWNBSPRegExp = new RegExp( ZWNBSP, 'g' );\n\n/**\n * Removes padding (zero width non breaking spaces) added by `toTree`.\n *\n * @param {string} string\n */\nfunction removePadding( string ) {\n\treturn string.replace( ZWNBSPRegExp, '' );\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}    $1                      Named argements.\n * @param {?Element}  $1.element              Element to create value from.\n * @param {?Range}    $1.range                Range to create value from.\n * @param {?string}   $1.multilineTag         Multiline tag if the structure is\n *                                            multiline.\n * @param {?Array}    $1.multilineWrapperTags Tags where lines can be found if\n *                                            nesting is possible.\n * @param {?boolean} $1.preserveWhiteSpace    Whether or not to collapse white\n *                                            space characters.\n *\n * @return {Object} A rich text value.\n */\nfunction createFromElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n\tpreserveWhiteSpace,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst type = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === TEXT_NODE ) {\n\t\t\tlet filter = removePadding;\n\n\t\t\tif ( ! preserveWhiteSpace ) {\n\t\t\t\tfilter = ( string ) =>\n\t\t\t\t\tremovePadding( collapseWhiteSpace( string ) );\n\t\t\t}\n\n\t\t\tconst text = filter( node.nodeValue );\n\t\t\trange = filterRange( node, range, filter );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tisEditableTree &&\n\t\t\t// Ignore any placeholders.\n\t\t\t( node.getAttribute( 'data-rich-text-placeholder' ) ||\n\t\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\t\t( type === 'br' &&\n\t\t\t\t\t! node.getAttribute( 'data-rich-text-line-break' ) ) )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( type === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst lastFormats =\n\t\t\taccumulator.formats[ accumulator.formats.length - 1 ];\n\t\tconst lastFormat = lastFormats && lastFormats[ lastFormats.length - 1 ];\n\t\tconst newFormat = toFormat( {\n\t\t\ttype,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\t\tconst format = isFormatEqual( newFormat, lastFormat )\n\t\t\t? lastFormat\n\t\t\t: newFormat;\n\n\t\tif (\n\t\t\tmultilineWrapperTags &&\n\t\t\tmultilineWrapperTags.indexOf( type ) !== -1\n\t\t) {\n\t\t\tconst value = createFromMultilineElement( {\n\t\t\t\telement: node,\n\t\t\t\trange,\n\t\t\t\tmultilineTag,\n\t\t\t\tmultilineWrapperTags,\n\t\t\t\tcurrentWrapperTags: [ ...currentWrapperTags, format ],\n\t\t\t\tisEditableTree,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\tif ( ! format ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Indices should share a reference to the same formats array.\n\t\t\t// Only create a new reference if `formats` changes.\n\t\t\tfunction mergeFormats( formats ) {\n\t\t\t\tif ( mergeFormats.formats === formats ) {\n\t\t\t\t\treturn mergeFormats.newFormats;\n\t\t\t\t}\n\n\t\t\t\tconst newFormats = formats\n\t\t\t\t\t? [ format, ...formats ]\n\t\t\t\t\t: [ format ];\n\n\t\t\t\tmergeFormats.formats = formats;\n\t\t\t\tmergeFormats.newFormats = newFormats;\n\n\t\t\t\treturn newFormats;\n\t\t\t}\n\n\t\t\t// Since the formats parameter can be `undefined`, preset\n\t\t\t// `mergeFormats` with a new reference.\n\t\t\tmergeFormats.newFormats = [ format ];\n\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, mergeFormats ),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Creates a rich text value from a DOM element and range that should be\n * multiline.\n *\n * @param {Object}   $1                      Named argements.\n * @param {?Element} $1.element              Element to create value from.\n * @param {?Range}   $1.range                Range to create value from.\n * @param {?string}  $1.multilineTag         Multiline tag if the structure is\n *                                           multiline.\n * @param {?Array}   $1.multilineWrapperTags Tags where lines can be found if\n *                                           nesting is possible.\n * @param {boolean}  $1.currentWrapperTags   Whether to prepend a line\n *                                           separator.\n * @param {?boolean} $1.preserveWhiteSpace   Whether or not to collapse white\n *                                           space characters.\n *\n * @return {Object} A rich text value.\n */\nfunction createFromMultilineElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n\tpreserveWhiteSpace,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element || ! element.hasChildNodes() ) {\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.children.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.children[ index ];\n\n\t\tif ( node.nodeName.toLowerCase() !== multilineTag ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tcurrentWrapperTags,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\t// Multiline value text should be separated by a line separator.\n\t\tif ( index !== 0 || currentWrapperTags.length > 0 ) {\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements:\n\t\t\t\t\tcurrentWrapperTags.length > 0\n\t\t\t\t\t\t? [ currentWrapperTags ]\n\t\t\t\t\t\t: [ , ],\n\t\t\t\ttext: LINE_SEPARATOR,\n\t\t\t} );\n\t\t}\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\t\tmergePair( accumulator, value );\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}    $1                 Named argements.\n * @param {Element}   $1.element         Element to get attributes from.\n *\n * @return {?Object} Attribute object or `undefined` if the element has no\n *                   attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ name ] = value;\n\t}\n\n\treturn accumulator;\n}\n","/**\n * External dependencies\n */\n\nimport { find } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {Object} value      Value to inspect.\n * @param {string} formatType Format type to look for.\n *\n * @return {Object|undefined} Active format object of the specified type, or undefined.\n */\nexport function getActiveFormat( value, formatType ) {\n\treturn find( getActiveFormats( value ), { type: formatType } );\n}\n","/**\n * Gets the all format objects at the start of the selection.\n *\n * @param {Object} value                Value to inspect.\n * @param {Array}  EMPTY_ACTIVE_FORMATS Array to return if there are no active\n *                                      formats.\n *\n * @return {?Object} Active format objects.\n */\nexport function getActiveFormats(\n\t{ formats, start, end, activeFormats },\n\tEMPTY_ACTIVE_FORMATS = []\n) {\n\tif ( start === undefined ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tif ( start === end ) {\n\t\t// For a collapsed caret, it is possible to override the active formats.\n\t\tif ( activeFormats ) {\n\t\t\treturn activeFormats;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\t// By default, select the lowest amount of formats possible (which means\n\t\t// the caret is positioned outside the format boundary). The user can\n\t\t// then use arrow keys to define `activeFormats`.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\treturn formatsBefore;\n\t\t}\n\n\t\treturn formatsAfter;\n\t}\n\n\treturn formats[ start ] || EMPTY_ACTIVE_FORMATS;\n}\n","/**\n * Internal dependencies\n */\n\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/**\n * Gets the active object, if there is any.\n *\n * @param {Object} value Value to inspect.\n *\n * @return {?Object} Active object, or undefined.\n */\nexport function getActiveObject( { start, end, replacements, text } ) {\n\tif ( start + 1 !== end || text[ start ] !== OBJECT_REPLACEMENT_CHARACTER ) {\n\t\treturn;\n\t}\n\n\treturn replacements[ start ];\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Returns a registered format type.\n *\n * @param {string} name Format name.\n *\n * @return {?Object} Format type.\n */\nexport function getFormatType( name ) {\n\treturn select( 'core/rich-text' ).getFormatType( name );\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Gets the line index of the last child in the list.\n *\n * @param {Object} value     Value to search.\n * @param {number} lineIndex Line index of a list item in the list.\n *\n * @return {Array} The index of the last child.\n */\nexport function getLastChildIndex( { text, replacements }, lineIndex ) {\n\tconst lineFormats = replacements[ lineIndex ] || [];\n\t// Use the given line index in case there are no next children.\n\tlet childIndex = lineIndex;\n\n\t// `lineIndex` could be `undefined` if it's the first line.\n\tfor ( let index = lineIndex || 0; index < text.length; index++ ) {\n\t\t// We're only interested in line indices.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// If the amout of formats is equal or more, store it, then return the\n\t\t// last one if the amount of formats is less.\n\t\tif ( formatsAtIndex.length >= lineFormats.length ) {\n\t\t\tchildIndex = index;\n\t\t} else {\n\t\t\treturn childIndex;\n\t\t}\n\t}\n\n\t// If the end of the text is reached, return the last child index.\n\treturn childIndex;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Gets the currently selected line index, or the first line index if the\n * selection spans over multiple items.\n *\n * @param {Object}  value      Value to get the line index from.\n * @param {boolean} startIndex Optional index that should be contained by the\n *                             line. Defaults to the selection start of the\n *                             value.\n *\n * @return {?boolean} The line index. Undefined if not found.\n */\nexport function getLineIndex( { start, text }, startIndex = start ) {\n\tlet index = startIndex;\n\n\twhile ( index-- ) {\n\t\tif ( text[ index ] === LINE_SEPARATOR ) {\n\t\t\treturn index;\n\t\t}\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Gets the index of the first parent list. To get the parent list formats, we\n * go through every list item until we find one with exactly one format type\n * less.\n *\n * @param {Object} value     Value to search.\n * @param {number} lineIndex Line index of a child list item.\n *\n * @return {Array} The parent list line index.\n */\nexport function getParentLineIndex( { text, replacements }, lineIndex ) {\n\tconst startFormats = replacements[ lineIndex ] || [];\n\n\tlet index = lineIndex;\n\n\twhile ( index-- >= 0 ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\tif ( formatsAtIndex.length === startFormats.length - 1 ) {\n\t\t\treturn index;\n\t\t}\n\t}\n}\n","/**\n * Get the textual content of a Rich Text value. This is similar to\n * `Element.textContent`.\n *\n * @param {Object} value Value to use.\n *\n * @return {string} The text content.\n */\nexport function getTextContent( { text } ) {\n\treturn text;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { canIndentListItems } from './can-indent-list-items';\n\n/**\n * Gets the line index of the first previous list item with higher indentation.\n *\n * @param {Object} value      Value to search.\n * @param {number} lineIndex  Line index of the list item to compare with.\n *\n * @return {boolean} The line index.\n */\nfunction getTargetLevelLineIndex( { text, replacements }, lineIndex ) {\n\tconst startFormats = replacements[ lineIndex ] || [];\n\n\tlet index = lineIndex;\n\n\twhile ( index-- >= 0 ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// Return the first line index that is one level higher. If the level is\n\t\t// lower or equal, there is no result.\n\t\tif ( formatsAtIndex.length === startFormats.length + 1 ) {\n\t\t\treturn index;\n\t\t} else if ( formatsAtIndex.length <= startFormats.length ) {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n/**\n * Indents any selected list items if possible.\n *\n * @param {Object} value      Value to change.\n * @param {Object} rootFormat Root format.\n *\n * @return {Object} The changed value.\n */\nexport function indentListItems( value, rootFormat ) {\n\tif ( ! canIndentListItems( value ) ) {\n\t\treturn value;\n\t}\n\n\tconst lineIndex = getLineIndex( value );\n\tconst previousLineIndex = getLineIndex( value, lineIndex );\n\tconst { text, replacements, end } = value;\n\tconst newFormats = replacements.slice();\n\tconst targetLevelLineIndex = getTargetLevelLineIndex( value, lineIndex );\n\n\tfor ( let index = lineIndex; index < end; index++ ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Get the previous list, and if there's a child list, take over the\n\t\t// formats. If not, duplicate the last level and create a new level.\n\t\tif ( targetLevelLineIndex ) {\n\t\t\tconst targetFormats = replacements[ targetLevelLineIndex ] || [];\n\t\t\tnewFormats[ index ] = targetFormats.concat(\n\t\t\t\t( newFormats[ index ] || [] ).slice( targetFormats.length - 1 )\n\t\t\t);\n\t\t} else {\n\t\t\tconst targetFormats = replacements[ previousLineIndex ] || [];\n\t\t\tconst lastformat =\n\t\t\t\ttargetFormats[ targetFormats.length - 1 ] || rootFormat;\n\n\t\t\tnewFormats[ index ] = targetFormats.concat(\n\t\t\t\t[ lastformat ],\n\t\t\t\t( newFormats[ index ] || [] ).slice( targetFormats.length )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newFormats,\n\t};\n}\n","/**\n * Internal dependencies\n */\nimport './store';\n\nexport { applyFormat } from './apply-format';\nexport { concat } from './concat';\nexport { create } from './create';\nexport { getActiveFormat } from './get-active-format';\nexport { getActiveObject } from './get-active-object';\nexport { getTextContent } from './get-text-content';\nexport { isListRootSelected as __unstableIsListRootSelected } from './is-list-root-selected';\nexport { isActiveListType as __unstableIsActiveListType } from './is-active-list-type';\nexport { isCollapsed } from './is-collapsed';\nexport { isEmpty, isEmptyLine as __unstableIsEmptyLine } from './is-empty';\nexport { join } from './join';\nexport { registerFormatType } from './register-format-type';\nexport { removeFormat } from './remove-format';\nexport { remove } from './remove';\nexport { replace } from './replace';\nexport { insert } from './insert';\nexport { insertLineSeparator as __unstableInsertLineSeparator } from './insert-line-separator';\nexport { removeLineSeparator as __unstableRemoveLineSeparator } from './remove-line-separator';\nexport { insertObject } from './insert-object';\nexport { slice } from './slice';\nexport { split } from './split';\nexport { toDom as __unstableToDom } from './to-dom';\nexport { toHTMLString } from './to-html-string';\nexport { toggleFormat } from './toggle-format';\nexport { LINE_SEPARATOR as __UNSTABLE_LINE_SEPARATOR } from './special-characters';\nexport { unregisterFormatType } from './unregister-format-type';\nexport { canIndentListItems as __unstableCanIndentListItems } from './can-indent-list-items';\nexport { canOutdentListItems as __unstableCanOutdentListItems } from './can-outdent-list-items';\nexport { indentListItems as __unstableIndentListItems } from './indent-list-items';\nexport { outdentListItems as __unstableOutdentListItems } from './outdent-list-items';\nexport { changeListType as __unstableChangeListType } from './change-list-type';\nexport { createElement as __unstableCreateElement } from './create-element';\n\nexport { default as __experimentalRichText } from './component';\nexport { default as __unstableFormatEdit } from './component/format-edit';\n","/**\n * Internal dependencies\n */\n\nimport { getTextContent } from './get-text-content';\nimport { insert } from './insert';\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Insert a line break character into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {Object} value        Value to modify.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the value inserted.\n */\nexport function insertLineSeparator(\n\tvalue,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst beforeText = getTextContent( value ).slice( 0, startIndex );\n\tconst previousLineSeparatorIndex = beforeText.lastIndexOf( LINE_SEPARATOR );\n\tconst previousLineSeparatorFormats =\n\t\tvalue.replacements[ previousLineSeparatorIndex ];\n\tlet replacements = [ , ];\n\n\tif ( previousLineSeparatorFormats ) {\n\t\treplacements = [ previousLineSeparatorFormats ];\n\t}\n\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements,\n\t\ttext: LINE_SEPARATOR,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\n\nconst OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Insert a format as an object into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {Object} value          Value to modify.\n * @param {Object} formatToInsert Format to insert as object.\n * @param {number} [startIndex]   Start index.\n * @param {number} [endIndex]     End index.\n *\n * @return {Object} A new value with the object inserted.\n */\nexport function insertObject( value, formatToInsert, startIndex, endIndex ) {\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements: [ formatToInsert ],\n\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {Object}        value         Value to modify.\n * @param {Object|string} valueToInsert Value to insert.\n * @param {number}        [startIndex]  Start index.\n * @param {number}        [endIndex]    End index.\n *\n * @return {Object} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat(\n\t\t\t\tvalueToInsert.replacements,\n\t\t\t\treplacements.slice( endIndex )\n\t\t\t),\n\t\ttext:\n\t\t\ttext.slice( 0, startIndex ) +\n\t\t\tvalueToInsert.text +\n\t\t\ttext.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Wether or not the selected list has the given tag name.\n *\n * @param {Object}  value    The value to check.\n * @param {string}  type     The tag name the list should have.\n * @param {string}  rootType The current root tag name, to compare with in case\n *                           nothing is selected.\n *\n * @return {boolean} True if the current list type matches `type`, false if not.\n */\nexport function isActiveListType( value, type, rootType ) {\n\tconst { replacements, start } = value;\n\tconst lineIndex = getLineIndex( value, start );\n\tconst replacement = replacements[ lineIndex ];\n\n\tif ( ! replacement || replacement.length === 0 ) {\n\t\treturn type === rootType;\n\t}\n\n\tconst lastFormat = replacement[ replacement.length - 1 ];\n\n\treturn lastFormat.type === type;\n}\n","/**\n * Check if the selection of a Rich Text value is collapsed or not. Collapsed\n * means that no characters are selected, but there is a caret present. If there\n * is no selection, `undefined` will be returned. This is similar to\n * `window.getSelection().isCollapsed()`.\n *\n * @param {Object} value The rich text value to check.\n *\n * @return {boolean|undefined} True if the selection is collapsed, false if not,\n *                             undefined if there is no selection.\n */\nexport function isCollapsed( { start, end } ) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\treturn start === end;\n}\n","/**\n * Internal dependencies\n */\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Check if a Rich Text value is Empty, meaning it contains no text or any\n * objects (such as images).\n *\n * @param {Object} value Value to use.\n *\n * @return {boolean} True if the value is empty, false if not.\n */\nexport function isEmpty( { text } ) {\n\treturn text.length === 0;\n}\n\n/**\n * Check if the current collapsed selection is on an empty line in case of a\n * multiline value.\n *\n * @param  {Object} value Value te check.\n *\n * @return {boolean} True if the line is empty, false if not.\n */\nexport function isEmptyLine( { text, start, end } ) {\n\tif ( start !== end ) {\n\t\treturn false;\n\t}\n\n\tif ( text.length === 0 ) {\n\t\treturn true;\n\t}\n\n\tif ( start === 0 && text.slice( 0, 1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\tif ( start === text.length && text.slice( -1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\ttext.slice( start - 1, end + 1 ) ===\n\t\t`${ LINE_SEPARATOR }${ LINE_SEPARATOR }`\n\t);\n}\n","/**\n * Optimised equality check for format objects.\n *\n * @param {?Object} format1 Format to compare.\n * @param {?Object} format2 Format to compare.\n *\n * @return {boolean} True if formats are equal, false if not.\n */\nexport function isFormatEqual( format1, format2 ) {\n\t// Both not defined.\n\tif ( format1 === format2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! format1 || ! format2 ) {\n\t\treturn false;\n\t}\n\n\tif ( format1.type !== format2.type ) {\n\t\treturn false;\n\t}\n\n\tconst attributes1 = format1.attributes;\n\tconst attributes2 = format2.attributes;\n\n\t// Both not defined.\n\tif ( attributes1 === attributes2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! attributes1 || ! attributes2 ) {\n\t\treturn false;\n\t}\n\n\tconst keys1 = Object.keys( attributes1 );\n\tconst keys2 = Object.keys( attributes2 );\n\n\tif ( keys1.length !== keys2.length ) {\n\t\treturn false;\n\t}\n\n\tconst length = keys1.length;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst name = keys1[ i ];\n\n\t\tif ( attributes1[ name ] !== attributes2[ name ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Whether or not the root list is selected.\n *\n * @param {Object} value The value to check.\n *\n * @return {boolean} True if the root list or nothing is selected, false if an\n *                   inner list is selected.\n */\nexport function isListRootSelected( value ) {\n\tconst { replacements, start } = value;\n\tconst lineIndex = getLineIndex( value, start );\n\tconst replacement = replacements[ lineIndex ];\n\n\treturn ! replacement || replacement.length < 1;\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Combine an array of Rich Text values into one, optionally separated by\n * `separator`, which can be a Rich Text value, HTML string, or plain text\n * string. This is similar to `Array.prototype.join`.\n *\n * @param {Array<Object>} values      An array of values to join.\n * @param {string|Object} [separator] Separator string or value.\n *\n * @return {Object} A new combined value.\n */\nexport function join( values, separator = '' ) {\n\tif ( typeof separator === 'string' ) {\n\t\tseparator = create( { text: separator } );\n\t}\n\n\treturn normaliseFormats(\n\t\tvalues.reduce( ( accumlator, { formats, replacements, text } ) => ( {\n\t\t\tformats: accumlator.formats.concat( separator.formats, formats ),\n\t\t\treplacements: accumlator.replacements.concat(\n\t\t\t\tseparator.replacements,\n\t\t\t\treplacements\n\t\t\t),\n\t\t\ttext: accumlator.text + separator.text + text,\n\t\t} ) )\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Normalises formats: ensures subsequent adjacent equal formats have the same\n * reference.\n *\n * @param {Object} value Value to normalise formats of.\n *\n * @return {Object} New value with normalised formats.\n */\nexport function normaliseFormats( value ) {\n\tconst newFormats = value.formats.slice();\n\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\n\n\t\tif ( formatsAtPreviousIndex ) {\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\n\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\n\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\n\t\t}\n\t} );\n\n\treturn {\n\t\t...value,\n\t\tformats: newFormats,\n\t};\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { getParentLineIndex } from './get-parent-line-index';\nimport { getLastChildIndex } from './get-last-child-index';\nimport { canOutdentListItems } from './can-outdent-list-items';\n\n/**\n * Outdents any selected list items if possible.\n *\n * @param {Object} value Value to change.\n *\n * @return {Object} The changed value.\n */\nexport function outdentListItems( value ) {\n\tif ( ! canOutdentListItems( value ) ) {\n\t\treturn value;\n\t}\n\n\tconst { text, replacements, start, end } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\tconst newFormats = replacements.slice( 0 );\n\tconst parentFormats =\n\t\treplacements[ getParentLineIndex( value, startingLineIndex ) ] || [];\n\tconst endingLineIndex = getLineIndex( value, end );\n\tconst lastChildIndex = getLastChildIndex( value, endingLineIndex );\n\n\t// Outdent all list items from the starting line index until the last child\n\t// index of the ending list. All children of the ending list need to be\n\t// outdented, otherwise they'll be orphaned.\n\tfor ( let index = startingLineIndex; index <= lastChildIndex; index++ ) {\n\t\t// Skip indices that are not line separators.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// In the case of level 0, the formats at the index are undefined.\n\t\tconst currentFormats = newFormats[ index ] || [];\n\n\t\t// Omit the indentation level where the selection starts.\n\t\tnewFormats[ index ] = parentFormats.concat(\n\t\t\tcurrentFormats.slice( parentFormats.length + 1 )\n\t\t);\n\n\t\tif ( newFormats[ index ].length === 0 ) {\n\t\t\tdelete newFormats[ index ];\n\t\t}\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newFormats,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * @typedef {Object} WPFormat\n *\n * @property {string}   name        A string identifying the format. Must be\n *                                  unique across all registered formats.\n * @property {string}   tagName     The HTML tag this format will wrap the\n *                                  selection with.\n * @property {string}   [className] A class to match the format.\n * @property {string}   title       Name of the format.\n * @property {Function} edit        Should return a component for the user to\n *                                  interact with the new registered format.\n */\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name                 Format name.\n * @param {WPFormat} settings             Format settings.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully registered;\n *                              otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error( 'Format names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( 'core/rich-text' ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.tagName !== 'string' || settings.tagName === '' ) {\n\t\twindow.console.error( 'Format tag names must be a string.' );\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' ||\n\t\t\tsettings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select(\n\t\t\t'core/rich-text'\n\t\t).getFormatTypeForBareElement( settings.tagName );\n\n\t\tif ( formatTypeForBareElement ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select(\n\t\t\t'core/rich-text'\n\t\t).getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' +\n\t\t\t\tsettings.name +\n\t\t\t\t'\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error( 'Format titles must be strings.' );\n\t\treturn;\n\t}\n\n\tdispatch( 'core/rich-text' ).addFormatTypes( settings );\n\n\treturn settings;\n}\n","/**\n * External dependencies\n */\n\nimport { find, reject } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Remove any format object from a Rich Text value by type from the given\n * `startIndex` to the given `endIndex`. Indices are retrieved from the\n * selection if none are provided.\n *\n * @param {Object} value        Value to modify.\n * @param {string} formatType   Format type to remove.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the format applied.\n */\nexport function removeFormat(\n\tvalue,\n\tformatType,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// If the selection is collapsed, expand start and end to the edges of the\n\t// format.\n\tif ( startIndex === endIndex ) {\n\t\tconst format = find( newFormats[ startIndex ], { type: formatType } );\n\n\t\tif ( format ) {\n\t\t\twhile ( find( newFormats[ startIndex ], format ) ) {\n\t\t\t\tfilterFormats( newFormats, startIndex, formatType );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile ( find( newFormats[ endIndex ], format ) ) {\n\t\t\t\tfilterFormats( newFormats, endIndex, formatType );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( let i = startIndex; i < endIndex; i++ ) {\n\t\t\tif ( newFormats[ i ] ) {\n\t\t\t\tfilterFormats( newFormats, i, formatType );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\tactiveFormats: reject( activeFormats, { type: formatType } ),\n\t} );\n}\n\nfunction filterFormats( formats, index, formatType ) {\n\tconst newFormats = formats[ index ].filter(\n\t\t( { type } ) => type !== formatType\n\t);\n\n\tif ( newFormats.length ) {\n\t\tformats[ index ] = newFormats;\n\t} else {\n\t\tdelete formats[ index ];\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { isCollapsed } from './is-collapsed';\nimport { remove } from './remove';\n\n/**\n * Removes a line separator character, if existing, from a Rich Text value at the current\n * indices. If no line separator exists on the indices it will return undefined.\n *\n * @param {Object} value Value to modify.\n * @param {boolean} backward indicates if are removing from the start index or the end index.\n *\n * @return {Object|undefined} A new value with the line separator removed. Or undefined if no line separator is found on the position.\n */\nexport function removeLineSeparator( value, backward = true ) {\n\tconst { replacements, text, start, end } = value;\n\tconst collapsed = isCollapsed( value );\n\tlet index = start - 1;\n\tlet removeStart = collapsed ? start - 1 : start;\n\tlet removeEnd = end;\n\tif ( ! backward ) {\n\t\tindex = end;\n\t\tremoveStart = start;\n\t\tremoveEnd = collapsed ? end + 1 : end;\n\t}\n\n\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\treturn;\n\t}\n\n\tlet newValue;\n\t// If the line separator that is about te be removed\n\t// contains wrappers, remove the wrappers first.\n\tif ( collapsed && replacements[ index ] && replacements[ index ].length ) {\n\t\tconst newReplacements = replacements.slice();\n\n\t\tnewReplacements[ index ] = replacements[ index ].slice( 0, -1 );\n\t\tnewValue = {\n\t\t\t...value,\n\t\t\treplacements: newReplacements,\n\t\t};\n\t} else {\n\t\tnewValue = remove( value, removeStart, removeEnd );\n\t}\n\treturn newValue;\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { create } from './create';\n\n/**\n * Remove content from a Rich Text value between the given `startIndex` and\n * `endIndex`. Indices are retrieved from the selection if none are provided.\n *\n * @param {Object} value        Value to modify.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the content removed.\n */\nexport function remove( value, startIndex, endIndex ) {\n\treturn insert( value, create(), startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Search a Rich Text value and replace the match(es) with `replacement`. This\n * is similar to `String.prototype.replace`.\n *\n * @param {Object}         value        The value to modify.\n * @param {RegExp|string}  pattern      A RegExp object or literal. Can also be\n *                                      a string. It is treated as a verbatim\n *                                      string and is not interpreted as a\n *                                      regular expression. Only the first\n *                                      occurrence will be replaced.\n * @param {Function|string} replacement The match or matches are replaced with\n *                                      the specified or the value returned by\n *                                      the specified function.\n *\n * @return {Object} A new value with replacements applied.\n */\nexport function replace(\n\t{ formats, replacements, text, start, end },\n\tpattern,\n\treplacement\n) {\n\ttext = text.replace( pattern, ( match, ...rest ) => {\n\t\tconst offset = rest[ rest.length - 2 ];\n\t\tlet newText = replacement;\n\t\tlet newFormats;\n\t\tlet newReplacements;\n\n\t\tif ( typeof newText === 'function' ) {\n\t\t\tnewText = replacement( match, ...rest );\n\t\t}\n\n\t\tif ( typeof newText === 'object' ) {\n\t\t\tnewFormats = newText.formats;\n\t\t\tnewReplacements = newText.replacements;\n\t\t\tnewText = newText.text;\n\t\t} else {\n\t\t\tnewFormats = Array( newText.length );\n\t\t\tnewReplacements = Array( newText.length );\n\n\t\t\tif ( formats[ offset ] ) {\n\t\t\t\tnewFormats = newFormats.fill( formats[ offset ] );\n\t\t\t}\n\t\t}\n\n\t\tformats = formats\n\t\t\t.slice( 0, offset )\n\t\t\t.concat( newFormats, formats.slice( offset + match.length ) );\n\t\treplacements = replacements\n\t\t\t.slice( 0, offset )\n\t\t\t.concat(\n\t\t\t\tnewReplacements,\n\t\t\t\treplacements.slice( offset + match.length )\n\t\t\t);\n\n\t\tif ( start ) {\n\t\t\tstart = end = offset + newText.length;\n\t\t}\n\n\t\treturn newText;\n\t} );\n\n\treturn normaliseFormats( { formats, replacements, text, start, end } );\n}\n","/**\n * Slice a Rich Text value from `startIndex` to `endIndex`. Indices are\n * retrieved from the selection if none are provided. This is similar to\n * `String.prototype.slice`.\n *\n * @param {Object} value        Value to modify.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new extracted value.\n */\nexport function slice( value, startIndex = value.start, endIndex = value.end ) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( startIndex === undefined || endIndex === undefined ) {\n\t\treturn { ...value };\n\t}\n\n\treturn {\n\t\tformats: formats.slice( startIndex, endIndex ),\n\t\treplacements: replacements.slice( startIndex, endIndex ),\n\t\ttext: text.slice( startIndex, endIndex ),\n\t};\n}\n","/**\n * Line separator character, used for multiline text.\n */\nexport const LINE_SEPARATOR = '\\u2028';\n\n/**\n * Object replacement character, used as a placeholder for objects.\n */\nexport const OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Zero width non-breaking space, used as padding in the editable DOM tree when\n * it is empty otherwise.\n */\nexport const ZWNBSP = '\\ufeff';\n","/**\n * Internal dependencies\n */\n\nimport { replace } from './replace';\n\n/**\n * Split a Rich Text value in two at the given `startIndex` and `endIndex`, or\n * split at the given separator. This is similar to `String.prototype.split`.\n * Indices are retrieved from the selection if none are provided.\n *\n * @param {Object}        value\n * @param {Object[]}      value.formats\n * @param {Object[]}      value.replacements\n * @param {string}        value.text\n * @param {number}        value.start\n * @param {number}        value.end\n * @param {number|string} [string] Start index, or string at which to split.\n *\n * @return {Array} An array of new values.\n */\nexport function split( { formats, replacements, text, start, end }, string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn splitAtSelection( ...arguments );\n\t}\n\n\tlet nextStart = 0;\n\n\treturn text.split( string ).map( ( substring ) => {\n\t\tconst startIndex = nextStart;\n\t\tconst value = {\n\t\t\tformats: formats.slice( startIndex, startIndex + substring.length ),\n\t\t\treplacements: replacements.slice(\n\t\t\t\tstartIndex,\n\t\t\t\tstartIndex + substring.length\n\t\t\t),\n\t\t\ttext: substring,\n\t\t};\n\n\t\tnextStart += string.length + substring.length;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\t\t\tif ( start >= startIndex && start < nextStart ) {\n\t\t\t\tvalue.start = start - startIndex;\n\t\t\t} else if ( start < startIndex && end > startIndex ) {\n\t\t\t\tvalue.start = 0;\n\t\t\t}\n\n\t\t\tif ( end >= startIndex && end < nextStart ) {\n\t\t\t\tvalue.end = end - startIndex;\n\t\t\t} else if ( start < nextStart && end > nextStart ) {\n\t\t\t\tvalue.end = substring.length;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} );\n}\n\nfunction splitAtSelection(\n\t{ formats, replacements, text, start, end },\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tconst before = {\n\t\tformats: formats.slice( 0, startIndex ),\n\t\treplacements: replacements.slice( 0, startIndex ),\n\t\ttext: text.slice( 0, startIndex ),\n\t};\n\tconst after = {\n\t\tformats: formats.slice( endIndex ),\n\t\treplacements: replacements.slice( endIndex ),\n\t\ttext: text.slice( endIndex ),\n\t\tstart: 0,\n\t\tend: 0,\n\t};\n\n\treturn [\n\t\t// Ensure newlines are trimmed.\n\t\treplace( before, /\\u2028+$/, '' ),\n\t\treplace( after, /^\\u2028+/, '' ),\n\t];\n}\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that format types have been\n * added.\n *\n * @param {Array|Object} formatTypes Format types received.\n *\n * @return {Object} Action object.\n */\nexport function addFormatTypes( formatTypes ) {\n\treturn {\n\t\ttype: 'ADD_FORMAT_TYPES',\n\t\tformatTypes: castArray( formatTypes ),\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered format type.\n *\n * @param {string|Array} names Format name.\n *\n * @return {Object} Action object.\n */\nexport function removeFormatTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_FORMAT_TYPES',\n\t\tnames: castArray( names ),\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nregisterStore( 'core/rich-text', { reducer, selectors, actions } );\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer managing the format types\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function formatTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_FORMAT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.formatTypes, 'name' ),\n\t\t\t};\n\t\tcase 'REMOVE_FORMAT_TYPES':\n\t\t\treturn omit( state, action.names );\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( { formatTypes } );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { find } from 'lodash';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [ state.formatTypes ]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name Format type name.\n *\n * @return {Object?} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n\n/**\n * Gets the format type, if any, that can handle a bare element (without a\n * data-format-type attribute), given the tag name of this element.\n *\n * @param {Object} state              Data state.\n * @param {string} bareElementTagName The tag name of the element to find a\n *                                    format type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForBareElement( state, bareElementTagName ) {\n\treturn find( getFormatTypes( state ), ( { className, tagName } ) => {\n\t\treturn className === null && bareElementTagName === tagName;\n\t} );\n}\n\n/**\n * Gets the format type, if any, that can handle an element, given its classes.\n *\n * @param {Object} state            Data state.\n * @param {string} elementClassName The classes of the element to find a format\n *                                  type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForClassName( state, elementClassName ) {\n\treturn find( getFormatTypes( state ), ( { className } ) => {\n\t\tif ( className === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ` ${ elementClassName } `.indexOf( ` ${ className } ` ) >= 0;\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\n\n/**\n * Browser dependencies\n */\n\nconst { TEXT_NODE } = window.Node;\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\n/**\n * Returns a new instance of a DOM tree upon which RichText operations can be\n * applied.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createEmpty`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @return {Object} RichText tree.\n */\nconst createEmpty = () => createElement( document, '' );\n\nfunction append( element, child ) {\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tchild = element.ownerDocument.createElement( type );\n\n\t\tfor ( const key in attributes ) {\n\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( { nodeType } ) {\n\treturn nodeType === TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tmultilineTag,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`. If a `multilineTag` is provided,\n * text separated by two new lines will be wrapped in an `Element` of that type.\n *\n * @param {Object}      $1                        Named arguments.\n * @param {Object}      $1.value                  Value to apply.\n * @param {HTMLElement} $1.current                The live root node to apply the element tree to.\n * @param {string}      [$1.multilineTag]         Multiline tag.\n * @param {Array}       [$1.multilineWrapperTags] Tags where lines can be found if nesting is possible.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tmultilineTag,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === TEXT_NODE &&\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\n/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range} a First range object to test.\n * @param {Range} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nfunction isRangeEqual( a, b ) {\n\treturn (\n\t\ta.startContainer === b.startContainer &&\n\t\ta.startOffset === b.startOffset &&\n\t\ta.endContainer === b.endContainer &&\n\t\ta.endOffset === b.endOffset\n\t);\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tstartPath\n\t);\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tendPath\n\t);\n\tconst selection = window.getSelection();\n\tconst { ownerDocument } = current;\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\tconst { activeElement } = ownerDocument;\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n\n\t// This function is not intended to cause a shift in focus. Since the above\n\t// selection manipulations may shift focus, ensure that focus is restored to\n\t// its previous state.\n\tif ( activeElement !== document.activeElement ) {\n\t\t// The `instanceof` checks protect against edge cases where the focused\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\n\t\t// or `blur` property).\n\t\t//\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\n\t\tif ( activeElement instanceof window.HTMLElement ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\t}\n}\n","/**\n * WordPress dependencies\n */\n\nimport {\n\tescapeEditableHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/**\n * Create an HTML string from a Rich Text value. If a `multilineTag` is\n * provided, text separated by a line separator will be wrapped in it.\n *\n * @param {Object}   $1                      Named argements.\n * @param {Object}   $1.value                Rich text value.\n * @param {string}   [$1.multilineTag]       Multiline tag.\n * @param {?boolean} [$1.preserveWhiteSpace] Whether or not to use newline\n *                                           characters for line breaks.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, multilineTag, preserveWhiteSpace } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tpreserveWhiteSpace,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute(\n\t\t\tattributes[ key ]\n\t\t) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML(\n\t\tchildren\n\t) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children\n\t\t.map( ( child ) => {\n\t\t\treturn child.text === undefined\n\t\t\t\t? createElementHTML( child )\n\t\t\t\t: escapeEditableHTML( child.text );\n\t\t} )\n\t\t.join( '' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\nimport { getFormatType } from './get-format-type';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\n/**\n * Converts a format object to information that can be used to create an element\n * from (type, attributes and object).\n *\n * @param  {Object}  $1                        Named parameters.\n * @param  {string}  $1.type                   The format type.\n * @param  {Object}  $1.attributes             The format attributes.\n * @param  {Object}  $1.unregisteredAttributes The unregistered format\n *                                             attributes.\n * @param  {boolean} $1.object                 Wether or not it is an object\n *                                             format.\n * @param  {boolean} $1.boundaryClass          Wether or not to apply a boundary\n *                                             class.\n * @return {Object}                            Information to be used for\n *                                             element creation.\n */\nfunction fromFormat( {\n\ttype,\n\tattributes,\n\tunregisteredAttributes,\n\tobject,\n\tboundaryClass,\n} ) {\n\tconst formatType = getFormatType( type );\n\n\tlet elementAttributes = {};\n\n\tif ( boundaryClass ) {\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\n\t}\n\n\tif ( ! formatType ) {\n\t\tif ( attributes ) {\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\n\t\t}\n\n\t\treturn { type, attributes: elementAttributes, object };\n\t}\n\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\n\n\tfor ( const name in attributes ) {\n\t\tconst key = formatType.attributes\n\t\t\t? formatType.attributes[ name ]\n\t\t\t: false;\n\n\t\tif ( key ) {\n\t\t\telementAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\telementAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\tif ( formatType.className ) {\n\t\tif ( elementAttributes.class ) {\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\n\t\t} else {\n\t\t\telementAttributes.class = formatType.className;\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: formatType.tagName,\n\t\tobject: formatType.object,\n\t\tattributes: elementAttributes,\n\t};\n}\n\n/**\n * Checks if both arrays of formats up until a certain index are equal.\n *\n * @param {Array}  a     Array of formats to compare.\n * @param {Array}  b     Array of formats to compare.\n * @param {number} index Index to check until.\n */\nfunction isEqualUntil( a, b, index ) {\n\tdo {\n\t\tif ( a[ index ] !== b[ index ] ) {\n\t\t\treturn false;\n\t\t}\n\t} while ( index-- );\n\n\treturn true;\n}\n\nexport function toTree( {\n\tvalue,\n\tmultilineTag,\n\tpreserveWhiteSpace,\n\tcreateEmpty,\n\tappend,\n\tgetLastChild,\n\tgetParent,\n\tisText,\n\tgetText,\n\tremove,\n\tappendText,\n\tonStartIndex,\n\tonEndIndex,\n\tisEditableTree,\n\tplaceholder,\n} ) {\n\tconst { formats, replacements, text, start, end } = value;\n\tconst formatsLength = formats.length + 1;\n\tconst tree = createEmpty();\n\tconst multilineFormat = { type: multilineTag };\n\tconst activeFormats = getActiveFormats( value );\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\n\n\tlet lastSeparatorFormats;\n\tlet lastCharacterFormats;\n\tlet lastCharacter;\n\n\t// If we're building a multiline tree, start off with a multiline element.\n\tif ( multilineTag ) {\n\t\tappend( append( tree, { type: multilineTag } ), '' );\n\t\tlastCharacterFormats = lastSeparatorFormats = [ multilineFormat ];\n\t} else {\n\t\tappend( tree, '' );\n\t}\n\n\tfor ( let i = 0; i < formatsLength; i++ ) {\n\t\tconst character = text.charAt( i );\n\t\tconst shouldInsertPadding =\n\t\t\tisEditableTree &&\n\t\t\t// Pad the line if the line is empty.\n\t\t\t( ! lastCharacter ||\n\t\t\t\tlastCharacter === LINE_SEPARATOR ||\n\t\t\t\t// Pad the line if the previous character is a line break, otherwise\n\t\t\t\t// the line break won't be visible.\n\t\t\t\tlastCharacter === '\\n' );\n\n\t\tlet characterFormats = formats[ i ];\n\n\t\t// Set multiline tags in queue for building the tree.\n\t\tif ( multilineTag ) {\n\t\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\t\tcharacterFormats = lastSeparatorFormats = (\n\t\t\t\t\treplacements[ i ] || []\n\t\t\t\t).reduce(\n\t\t\t\t\t( accumulator, format ) => {\n\t\t\t\t\t\taccumulator.push( format, multilineFormat );\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t},\n\t\t\t\t\t[ multilineFormat ]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcharacterFormats = [\n\t\t\t\t\t...lastSeparatorFormats,\n\t\t\t\t\t...( characterFormats || [] ),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tlet pointer = getLastChild( tree );\n\n\t\tif ( shouldInsertPadding && character === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tappend( getParent( node ), ZWNBSP );\n\t\t}\n\n\t\t// Set selection for the start of line.\n\t\tif ( lastCharacter === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tif ( onStartIndex && start === i ) {\n\t\t\t\tonStartIndex( tree, node );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === i ) {\n\t\t\t\tonEndIndex( tree, node );\n\t\t\t}\n\t\t}\n\n\t\tif ( characterFormats ) {\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\n\t\t\t\tif (\n\t\t\t\t\tpointer &&\n\t\t\t\t\tlastCharacterFormats &&\n\t\t\t\t\t// Reuse the last element if all formats remain the same.\n\t\t\t\t\tisEqualUntil(\n\t\t\t\t\t\tcharacterFormats,\n\t\t\t\t\t\tlastCharacterFormats,\n\t\t\t\t\t\tformatIndex\n\t\t\t\t\t) &&\n\t\t\t\t\t// Do not reuse the last element if the character is a\n\t\t\t\t\t// line separator.\n\t\t\t\t\t( character !== LINE_SEPARATOR ||\n\t\t\t\t\t\tcharacterFormats.length - 1 !== formatIndex )\n\t\t\t\t) {\n\t\t\t\t\tpointer = getLastChild( pointer );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { type, attributes, unregisteredAttributes } = format;\n\n\t\t\t\tconst boundaryClass =\n\t\t\t\t\tisEditableTree &&\n\t\t\t\t\tcharacter !== LINE_SEPARATOR &&\n\t\t\t\t\tformat === deepestActiveFormat;\n\n\t\t\t\tconst parent = getParent( pointer );\n\t\t\t\tconst newNode = append(\n\t\t\t\t\tparent,\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tunregisteredAttributes,\n\t\t\t\t\t\tboundaryClass,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\n\t\t\t\t\tremove( pointer );\n\t\t\t\t}\n\n\t\t\t\tpointer = append( newNode, '' );\n\t\t\t} );\n\t\t}\n\n\t\t// No need for further processing if the character is a line separator.\n\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\tlastCharacterFormats = characterFormats;\n\t\t\tlastCharacter = character;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If there is selection at 0, handle it before characters are inserted.\n\t\tif ( i === 0 ) {\n\t\t\tif ( onStartIndex && start === 0 ) {\n\t\t\t\tonStartIndex( tree, pointer );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === 0 ) {\n\t\t\t\tonEndIndex( tree, pointer );\n\t\t\t}\n\t\t}\n\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\n\t\t\tpointer = append(\n\t\t\t\tgetParent( pointer ),\n\t\t\t\tfromFormat( {\n\t\t\t\t\t...replacements[ i ],\n\t\t\t\t\tobject: true,\n\t\t\t\t} )\n\t\t\t);\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! preserveWhiteSpace && character === '\\n' ) {\n\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\ttype: 'br',\n\t\t\t\tattributes: isEditableTree\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'data-rich-text-line-break': 'true',\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined,\n\t\t\t\tobject: true,\n\t\t\t} );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! isText( pointer ) ) {\n\t\t\tpointer = append( getParent( pointer ), character );\n\t\t} else {\n\t\t\tappendText( pointer, character );\n\t\t}\n\n\t\tif ( onStartIndex && start === i + 1 ) {\n\t\t\tonStartIndex( tree, pointer );\n\t\t}\n\n\t\tif ( onEndIndex && end === i + 1 ) {\n\t\t\tonEndIndex( tree, pointer );\n\t\t}\n\n\t\tif ( shouldInsertPadding && i === text.length ) {\n\t\t\tappend( getParent( pointer ), ZWNBSP );\n\n\t\t\tif ( placeholder && text.length === 0 ) {\n\t\t\t\tappend( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\n\t\t\t\t\t\t// selection. The placeholder is also not editable after\n\t\t\t\t\t\t// all.\n\t\t\t\t\t\tcontenteditable: 'false',\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tlastCharacterFormats = characterFormats;\n\t\tlastCharacter = character;\n\t}\n\n\treturn tree;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormat } from './get-active-format';\nimport { removeFormat } from './remove-format';\nimport { applyFormat } from './apply-format';\n\n/**\n * Toggles a format object to a Rich Text value at the current selection.\n *\n * @param {Object} value  Value to modify.\n * @param {Object} format Format to apply or remove.\n *\n * @return {Object} A new value with the format applied or removed.\n */\nexport function toggleFormat( value, format ) {\n\tif ( getActiveFormat( value, format.type ) ) {\n\t\treturn removeFormat( value, format.type );\n\t}\n\n\treturn applyFormat( value, format );\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/** @typedef {import('./register-format-type').WPFormat} WPFormat */\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {WPFormat|undefined} The previous format value, if it has been successfully\n *                              unregistered; otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( 'core/rich-text' ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error( `Format ${ name } is not registered.` );\n\t\treturn;\n\t}\n\n\tdispatch( 'core/rich-text' ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Efficiently updates all the formats from `start` (including) until `end`\n * (excluding) with the active formats. Mutates `value`.\n *\n * @param  {Object} $1         Named paramentes.\n * @param  {Object} $1.value   Value te update.\n * @param  {number} $1.start   Index to update from.\n * @param  {number} $1.end     Index to update until.\n * @param  {Array}  $1.formats Replacement formats.\n *\n * @return {Object} Mutated value.\n */\nexport function updateFormats( { value, start, end, formats } ) {\n\tconst formatsBefore = value.formats[ start - 1 ] || [];\n\tconst formatsAfter = value.formats[ end ] || [];\n\n\t// First, fix the references. If any format right before or after are\n\t// equal, the replacement format should use the same reference.\n\tvalue.activeFormats = formats.map( ( format, index ) => {\n\t\tif ( formatsBefore[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\n\t\t\t\treturn formatsBefore[ index ];\n\t\t\t}\n\t\t} else if ( formatsAfter[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\n\t\t\t\treturn formatsAfter[ index ];\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t} );\n\n\twhile ( --end >= start ) {\n\t\tif ( value.activeFormats.length > 0 ) {\n\t\t\tvalue.formats[ end ] = value.activeFormats;\n\t\t} else {\n\t\t\tdelete value.formats[ end ];\n\t\t}\n\t}\n\n\treturn value;\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"deprecated\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"escapeHtml\"]; }());","(function() { module.exports = this[\"wp\"][\"isShallowEqual\"]; }());","(function() { module.exports = this[\"wp\"][\"keycodes\"]; }());","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}