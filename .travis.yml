sudo: required
dist: trusty

# language: php

addons:
  chrome: stable

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
    - dev

services:
  - mysql 
  - xvfb

before_install:
  - mysql -e 'CREATE DATABASE IF NOT EXISTS wordpress_test;'  
  - mysql -u root --default-character-set=utf8 wordpress_test < wordpress-from-wordpress.org-download/wordpress/db.sql

  - mysql -e 'CREATE DATABASE IF NOT EXISTS WBC_TEST_ENV_with_sample_data_wp_latest_1;'  
  - mysql -u root --default-character-set=utf8 WBC_TEST_ENV_with_sample_data_wp_latest_1 < wordpress-from-wordpress.org-download/WBC_TEST_ENV_with_sample_data/wordpress-latest-1/db.sql

cache:
  directories:
    - $HOME/.composer/cache #_switch

env:
  global:
    - PATH="$TRAVIS_BUILD_DIR/vendor/bin:$PATH"
    - WP_CLI_BIN_DIR="$TRAVIS_BUILD_DIR/vendor/bin"
    # - WP_VERSION=latest WP_MULTISITE=0
    - WP_MULTISITE=0
    - NODE_VERSION="12.0"
    # Define vars.
    - export WP_VERSION=master
    - export WP_DEVELOP_DIR=/tmp/wordpress/src
    - export SERVER_ROOT_DIR=/
    - export WP_CORE_DIR=/tmp/wordpress/src
    - export WP_CEPT_SERVER='127.0.0.1:8888'
    
# matrix:
#   include:
#     # - language: node_js
#     #   node_js:
#     #     - "10.21.0"
#     #   before_script:
#     #     - sleep 30s
#     #     - echo "cd to WP_DEVELOP_DIR..."
#     #     - cd $WP_DEVELOP_DIR

#     - language: php
#       # php: 7.2

#     - php:
#       - 7.1 
#       - 7.0 
#       # - 5.3
language: php

php:
  - 7.3  
  # - 7.2 #.3 
  # - 7.2.2 

# env: WP_VERSION=latest
before_script:
  # - sudo apt-get update
  # - sudo apt-get install apache2 libapache2-mod-fastcgi
  # # enable php-fpm
  # - sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
  # - sudo a2enmod rewrite actions fastcgi alias
  # - echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  # - sudo sed -i -e "s,www-data,travis,g" /etc/apache2/envvars
  # - sudo chown -R travis:travis /var/lib/apache2/fastcgi
  # - ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
  # # configure apache virtual hosts
  # - sudo cp -f build/travis-ci-apache /etc/apache2/sites-available/000-default.conf
  # - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/000-default.conf
  # - sudo service apache2 restart

  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      echo "TRAVIS_BUILD_DIR... $TRAVIS_BUILD_DIR"
      phpenv config-rm xdebug.ini
    else
      echo "TRAVIS_BUILD_DIR... $TRAVIS_BUILD_DIR"
      echo "xdebug.ini does not exist"
    fi
  # - |
  #   if [[ ! -z "$WP_VERSION" ]] ; then
  #     bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
  #     composer global require "phpunit/phpunit=5.*"
  #   fi
  - |
    if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
      composer global require wp-coding-standards/wpcs
      phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
    fi

  # Install WordPress
  - source travis.sh
  - install-wordpress
  # - install_test_suite
  # - move_things
  
  # Start up a web server.
  # - php -S "$WP_CEPT_SERVER" -t "$WP_CORE_DIR" >/dev/null 2>&1 &
  - php -S "$WP_CEPT_SERVER" -t "$SERVER_ROOT_DIR" >/dev/null 2>&1 &
  # Start up the webdriver.
  #- phantomjs --webdriver=4444 >/dev/null 2>&1 &
  # - phantomjs --webdriver=4444 >/dev/null 2>&1 &

  # #selenium
  # - git clone https://github.com/srimaln91/selenium-installer.git
  # - cd selenium-installer
  # - sudo bash selenium_install.sh
  # - selenium start &
  # # - sleep 5s
  # - cd ..
  
  #selenium, chrome etc. 
  - echo "Config required"
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

  - echo "Download selenium-server-standalone jar file"
  # - wget -c -nc --retry-connrefused --tries=0 https://bit.ly/2TlkRyu -O selenium-server-standalone.jar
  - wget -c -nc --retry-connrefused --tries=0 http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar -O selenium-server-standalone.jar
  
  - echo "Download chromedriver"
  # - wget https://chromedriver.storage.googleapis.com/74.0.3729.6/chromedriver_linux64.zip
  - wget https://chromedriver.storage.googleapis.com/2.27/chromedriver_linux64.zip
  - unzip -o -q chromedriver_linux64.zip

  - echo "Run selenium-server"
  # # - nohup bash -c "java -jar selenium-server-standalone.jar &" && sleep 1; cat nohup.out
  # - nohup bash -c "java -jar selenium-server-standalone.jar &" && sleep 1; 
  - nohup bash -c "java -jar selenium-server-standalone.jar -Dwebdriver.chrome.driver=\"chromedriver\" -Dwebdriver.chrome.whitelistedIps=\"localhost\" &" && sleep 1; 


  # Install Codeception and WP Browser.
  # Doing this last gives the webdriver and server time to start up.
  - composer_and_wp_plugins_install_update

  # #install normal wordpress from wordpress main repo etc.
  # - echo "curl based install..."
  # - curl --data "user_name=USERNAMEHERE&admin_password=PasswordHere&admin_password2=PasswordHere&admin_email=username@email.addr&blog_public=checked&Submit=submit" "$WP_CEPT_SERVER/wp-admin/install.php?step=2" 

script:
  # - |
  #   if [[ ! -z "$WP_VERSION" ]] ; then
  #     phpunit
  #     WP_MULTISITE=1 phpunit
  #   fi
  # - |
  #   if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
  #     phpcs
  #   fi

  # set the url in yml file(s) as per the test environment, we can use different yml files also but this is easy to setup and faster if we need to maintain single var 
  - edit_codeception_yml_file

  - php vendor/bin/codecept clean
  - php vendor/bin/codecept build
  - php vendor/bin/codecept run --steps --debug

  #echo the output 
  - echo_necessary_output

  # - vendor/bin/wpcept run

# - language: node_js
#   node_js:
#     - "10.21.0"
#   script: npm test #node_modules/karma/bin/karma start karma.conf.js --single-run
#   before_install:
#     - export DISPLAY=:99.0
#     - sh -e /etc/init.d/xvfb start
#   before_script:
#     - npm install

#- php: 7.1
#  env: WP_VERSION=latest
#- php: 7.0
#  env: WP_VERSION=latest
#- php: 5.6
#  env: WP_VERSION=latest
#- php: 5.6
#  env: WP_VERSION=trunk
#- php: 5.6
#  env: WP_TRAVISCI=phpcs
# - php: 5.3
#   env: WP_VERSION=latest

# - language: php
#   php: 5.3
#   # env: WP_VERSION=latest
#   before_script:
#     - env: WP_VERSION=set_suitable
#     - env: WBC_TEST_ENV=with_sample_data

#  dist: precise
